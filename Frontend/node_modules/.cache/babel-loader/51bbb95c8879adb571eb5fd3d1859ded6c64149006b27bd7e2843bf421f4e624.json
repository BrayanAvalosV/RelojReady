{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport Modal from 'react-modal';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\nimport '../style-table.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst DataTable = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const [rowsToEdit, setRowsToEdit] = useState([]);\n  const [rowsToDelete, setRowsToDelete] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeAction, setActiveAction] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data').then(response => response.json()).then(data => setRowData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const columnDefs = [{\n    headerName: 'Día',\n    field: 'Día',\n    flex: 1\n  }, {\n    headerName: 'RUT',\n    field: 'RUT',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada/Salida',\n    field: 'entrada/salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Fecha reloj',\n    field: 'fecha_reloj',\n    flex: 1\n  }, {\n    headerName: 'Hora reloj',\n    field: 'hora_reloj',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada Horario',\n    field: 'Hora Entrada',\n    flex: 1\n  }, {\n    headerName: 'Salida Horario',\n    field: 'Hora Salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Error encontrado',\n    field: 'Error encontrado',\n    flex: 1\n  }];\n  const gridOptions = {\n    columnDefs: columnDefs,\n    defaultColDef: {\n      resizable: false,\n      // Deshabilitar el redimensionamiento globalmente\n      sortable: false\n    }\n  };\n  const rowClassRules = {\n    'row-red': params => {\n      if (params.data['entrada/salida'] === 3 && params.data['hora_reloj'] === \"00:00\" && params.data['Hora Salida'] !== \"00:00\") {\n        params.data['Error encontrado'] = '1';\n        setRowData(prevRowData => [...prevRowData]);\n        return true;\n      }\n      return false;\n    },\n    'row-yellow': params => {\n      const filaActual = params.data;\n\n      // Si esta es la primera fila, no hay filas anteriores\n      if (params.node.rowIndex === 0) return false;\n\n      // Acceder a todas las filas anteriores\n      for (let i = 0; i < params.node.rowIndex; i++) {\n        const filaAnterior = params.api.getDisplayedRowAtIndex(i);\n        if (!filaAnterior || !filaAnterior.data) continue;\n\n        // Comparar cada campo especificado entre la fila actual y la fila anterior\n        const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\n        const todosCamposIguales = camposAComparar.every(campo => filaActual[campo] === filaAnterior.data[campo]);\n        if (!todosCamposIguales) continue;\n\n        // Si todos los campos coinciden, comparar la diferencia de horas\n        const horaRelojActual = filaActual['hora_reloj'];\n        const horaRelojAnterior = filaAnterior.data['hora_reloj'];\n        const [horaActualHoras, horaActualMinutos] = horaRelojActual.split(':').map(Number);\n        const [horaAnteriorHoras, horaAnteriorMinutos] = horaRelojAnterior.split(':').map(Number);\n        const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\n        const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\n        const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\n\n        // Retornar true si la diferencia es menor o igual a 5 minutos y todos los campos coinciden\n        if (diferenciaMinutos <= 5) {\n          filaActual['Error encontrado'] = '2';\n          setRowData(prevRowData => [...prevRowData]);\n          return true;\n        }\n      }\n      return false;\n    } /*,\r\n         'row-orange':params=>{\r\n             const filaActual = params.data;\r\n             const rutActual = filaActual['RUT'];\r\n      \n             // Obtener todas las filas anteriores con el mismo RUT\r\n             const filasPrevias = [];\r\n             params.api.forEachNode((node, index) => {\r\n                 if (index < params.node.rowIndex && node.data['RUT'] === rutActual) {\r\n                     filasPrevias.push(node.data);\r\n                 }\r\n             });\r\n      \n             // Si no hay filas previas con el mismo RUT, no hay error posible\r\n             if (filasPrevias.length === 0) return false;\r\n      \n             // Obtener el último marcaje registrado para el mismo RUT\r\n             const ultimoMarcaje = filasPrevias[filasPrevias.length - 1];\r\n      \n             // Validar el tipo de entrada/salida\r\n             const esEntradaActual = filaActual['entrada/salida'] === 1; // Actual es \"entrada\"\r\n             const esSalidaActual = filaActual['entrada/salida'] === 3; // Actual es \"salida\"\r\n      \n             const esEntradaUltima = ultimoMarcaje['entrada/salida'] === 1; // Última es \"entrada\"\r\n             const esSalidaUltima = ultimoMarcaje['entrada/salida'] === 3; // Última es \"salida\"\r\n      \n             // Detectar error de marcaje\r\n             const errorInversionEntrada = esEntradaActual && esEntradaUltima; // Dos entradas seguidas\r\n             const errorInversionSalida = esSalidaActual && esSalidaUltima;   // Dos salidas seguidas\r\n      \n             // Retornar true si hay un error de inversión de entrada/salida\r\n             if (errorInversionEntrada || errorInversionSalida) {\r\n                 return true;\r\n             }\r\n         },*/\n  };\n\n  // Preparar las filas a modificar y abrir el modal\n  const prepareChanges = () => {\n    const filteredRows = rowData.filter(row => row['entrada/salida'] === 3 && row['hora_reloj'] === \"00:00\" && row['Hora Salida'] !== \"00:00\");\n    setRowsToEdit(filteredRows);\n    setActiveAction('edit');\n    setIsModalOpen(true);\n  };\n  // Preparar las filas a eliminar y abrir el modal de confirmación (si deseas)\n  const prepareDeletions = () => {\n    // Filtrar las filas que cumplen con la lógica de row-yellow\n    const filteredRows = rowData.filter((row, index, array) => {\n      if (index === 0) return false;\n      const filaAnterior = array[index - 1];\n      const camposAComparar = ['Día', 'RUT', 'fecha_reloj'];\n      const todosCamposIguales = camposAComparar.every(campo => row[campo] === filaAnterior[campo]);\n      if (!todosCamposIguales) return false;\n\n      // Comparar la diferencia de horas\n      const horaRelojActual = row['hora_reloj'];\n      const horaRelojAnterior = filaAnterior['hora_reloj'];\n      const [horaActualHoras, horaActualMinutos] = horaRelojActual.split(':').map(Number);\n      const [horaAnteriorHoras, horaAnteriorMinutos] = horaRelojAnterior.split(':').map(Number);\n      const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\n      const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\n      const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\n\n      // Devolver true si la diferencia es menor o igual a 5 minutos y los campos coinciden\n      return diferenciaMinutos <= 5;\n    });\n    setRowsToEdit(filteredRows);\n    setActiveAction('delete');\n    setIsModalOpen(true); // Abrir el modal de confirmación (opcional)\n  };\n  const applyChanges = () => {\n    let updatedRowData;\n    if (activeAction === 'edit') {\n      updatedRowData = rowData.map(row => {\n        if (rowsToEdit.includes(row)) {\n          return {\n            ...row,\n            hora_reloj: row['Hora Salida']\n          };\n        }\n        return row;\n      });\n    } else if (activeAction === 'delete') {\n      updatedRowData = rowData.filter(row => !rowsToEdit.includes(row));\n    }\n    setRowData(updatedRowData);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"1-. Omisi\\xF3n de Marcaje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Permite que en aquellas filas donde la entrada no es marcada se le asigne el horario programado.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prepareChanges,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"2-. Marcaje m\\xFAltiple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Encuentra filas en donde se ha marcado mas de 1 vez, en un rango de tiempo de 5 minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prepareDeletions,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"3-. Ajustar Entrada/Salida Incorrecta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Revisa que no existan dos entradas o dos salidas consecutivas para la misma persona.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prepareChanges,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Confirmaci\\xF3n de Cambios\",\n      style: {\n        content: {\n          maxWidth: '500px',\n          margin: 'auto',\n          padding: '20px',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: activeAction === 'edit' ? 'Confirmar Edición' : 'Confirmar Eliminación'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: activeAction === 'edit' ? 'Las siguientes filas serán editadas:' : 'Las siguientes filas serán eliminadas:'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          paddingLeft: '20px'\n        },\n        children: rowsToEdit.map((row, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"D\\xEDa: \", row['Día'], \", RUT: \", row['RUT'], \", Hora Reloj: \", row['hora_reloj'], /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nuevos valores:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#28a745'\n              },\n              children: [\"D\\xEDa: \", row.newDay || row['Día'], \", Hora: \", row.newHour || row['hora_reloj']]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), '}']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyChanges,\n          style: {\n            padding: '10px 20px',\n            marginRight: '10px',\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(false),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        height: '400px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: rowData,\n        gridOptions: gridOptions,\n        columnDefs: columnDefs,\n        rowClassRules: rowClassRules,\n        pagination: true,\n        sorting: true,\n        paginationPageSize: 10 // Número de filas por página\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(DataTable, \"nsDUMbIuHdB0rJjSaDGDT7OiPto=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useEffect","useState","AgGridReact","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","DataTable","_s","rowData","setRowData","rowsToEdit","setRowsToEdit","rowsToDelete","setRowsToDelete","isModalOpen","setIsModalOpen","activeAction","setActiveAction","fetch","then","response","json","data","catch","error","console","columnDefs","headerName","field","flex","editable","gridOptions","defaultColDef","resizable","sortable","rowClassRules","params","prevRowData","filaActual","node","rowIndex","i","filaAnterior","api","getDisplayedRowAtIndex","camposAComparar","todosCamposIguales","every","campo","horaRelojActual","horaRelojAnterior","horaActualHoras","horaActualMinutos","split","map","Number","horaAnteriorHoras","horaAnteriorMinutos","fechaActual","Date","fechaAnterior","diferenciaMinutos","Math","abs","prepareChanges","filteredRows","filter","row","prepareDeletions","index","array","applyChanges","updatedRowData","includes","hora_reloj","children","style","display","alignItems","width","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","justifyContent","onClick","padding","backgroundColor","color","border","borderRadius","minWidth","cursor","isOpen","onRequestClose","contentLabel","content","maxWidth","margin","textAlign","paddingLeft","newDay","newHour","marginTop","marginRight","className","height","pagination","sorting","paginationPageSize","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport Modal from 'react-modal';\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport '../style-table.css';\r\n\r\nModal.setAppElement('#root'); \r\n\r\nconst DataTable = () => {\r\n    const [rowData, setRowData] = useState([]);\r\n    const [rowsToEdit, setRowsToEdit] = useState([]);\r\n    const [rowsToDelete, setRowsToDelete] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [activeAction, setActiveAction] = useState('');\r\n    \r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/data')\r\n            .then(response => response.json())\r\n            .then(data => setRowData(data))\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []);\r\n\r\n    const columnDefs = [\r\n        { headerName: 'Día', field: 'Día', flex: 1 },\r\n        { headerName: 'RUT', field: 'RUT', editable:true, flex: 1},\r\n        { headerName: 'Entrada/Salida', field: 'entrada/salida', editable: true ,flex: 1},\r\n        { headerName: 'Fecha reloj', field: 'fecha_reloj',flex: 1 },\r\n        { headerName: 'Hora reloj', field: 'hora_reloj', editable: true,flex: 1 },\r\n        { headerName: 'Entrada Horario', field: 'Hora Entrada', flex: 1 },\r\n        { headerName: 'Salida Horario', field: 'Hora Salida', editable: true, flex: 1},\r\n        { headerName: 'Error encontrado', field: 'Error encontrado', flex: 1},\r\n    ];\r\n\r\n    const gridOptions = {\r\n        columnDefs: columnDefs,\r\n        defaultColDef: {\r\n            resizable: false, // Deshabilitar el redimensionamiento globalmente\r\n            sortable: false,\r\n        },\r\n    };\r\n\r\n    const rowClassRules = {\r\n            \r\n        'row-red': params => {\r\n        if (\r\n            params.data['entrada/salida'] === 3 &&\r\n            params.data['hora_reloj'] === \"00:00\" &&\r\n            params.data['Hora Salida'] !== \"00:00\"\r\n        ) {\r\n            params.data['Error encontrado'] = '1';\r\n            setRowData(prevRowData => [...prevRowData]);\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n        'row-yellow': params => {\r\n    const filaActual = params.data;\r\n\r\n    // Si esta es la primera fila, no hay filas anteriores\r\n    if (params.node.rowIndex === 0) return false;\r\n\r\n    // Acceder a todas las filas anteriores\r\n    for (let i = 0; i < params.node.rowIndex; i++) {\r\n        const filaAnterior = params.api.getDisplayedRowAtIndex(i);\r\n\r\n        if (!filaAnterior || !filaAnterior.data) continue;\r\n\r\n        // Comparar cada campo especificado entre la fila actual y la fila anterior\r\n        const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\r\n        const todosCamposIguales = camposAComparar.every(campo => filaActual[campo] === filaAnterior.data[campo]);\r\n\r\n        if (!todosCamposIguales) continue;\r\n\r\n        // Si todos los campos coinciden, comparar la diferencia de horas\r\n        const horaRelojActual = filaActual['hora_reloj'];\r\n        const horaRelojAnterior = filaAnterior.data['hora_reloj'];\r\n\r\n        const [horaActualHoras, horaActualMinutos] = horaRelojActual.split(':').map(Number);\r\n        const [horaAnteriorHoras, horaAnteriorMinutos] = horaRelojAnterior.split(':').map(Number);\r\n\r\n        const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\r\n        const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\r\n\r\n        const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\r\n\r\n        // Retornar true si la diferencia es menor o igual a 5 minutos y todos los campos coinciden\r\n        if (diferenciaMinutos <= 5) {\r\n            filaActual['Error encontrado'] = '2';\r\n            setRowData(prevRowData => [...prevRowData]);\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}/*,\r\n    'row-orange':params=>{\r\n        const filaActual = params.data;\r\n        const rutActual = filaActual['RUT'];\r\n\r\n        // Obtener todas las filas anteriores con el mismo RUT\r\n        const filasPrevias = [];\r\n        params.api.forEachNode((node, index) => {\r\n            if (index < params.node.rowIndex && node.data['RUT'] === rutActual) {\r\n                filasPrevias.push(node.data);\r\n            }\r\n        });\r\n\r\n        // Si no hay filas previas con el mismo RUT, no hay error posible\r\n        if (filasPrevias.length === 0) return false;\r\n\r\n        // Obtener el último marcaje registrado para el mismo RUT\r\n        const ultimoMarcaje = filasPrevias[filasPrevias.length - 1];\r\n\r\n        // Validar el tipo de entrada/salida\r\n        const esEntradaActual = filaActual['entrada/salida'] === 1; // Actual es \"entrada\"\r\n        const esSalidaActual = filaActual['entrada/salida'] === 3; // Actual es \"salida\"\r\n\r\n        const esEntradaUltima = ultimoMarcaje['entrada/salida'] === 1; // Última es \"entrada\"\r\n        const esSalidaUltima = ultimoMarcaje['entrada/salida'] === 3; // Última es \"salida\"\r\n\r\n        // Detectar error de marcaje\r\n        const errorInversionEntrada = esEntradaActual && esEntradaUltima; // Dos entradas seguidas\r\n        const errorInversionSalida = esSalidaActual && esSalidaUltima;   // Dos salidas seguidas\r\n\r\n        // Retornar true si hay un error de inversión de entrada/salida\r\n        if (errorInversionEntrada || errorInversionSalida) {\r\n            return true;\r\n        }\r\n    },*/\r\n    };\r\n     \r\n    // Preparar las filas a modificar y abrir el modal\r\n    const prepareChanges = () => {\r\n        const filteredRows = rowData.filter(row =>\r\n            row['entrada/salida'] === 3 &&\r\n            row['hora_reloj'] === \"00:00\" &&\r\n            row['Hora Salida'] !== \"00:00\"\r\n        );\r\n        setRowsToEdit(filteredRows);\r\n        setActiveAction('edit');\r\n        setIsModalOpen(true);\r\n    };\r\n    // Preparar las filas a eliminar y abrir el modal de confirmación (si deseas)\r\n    const prepareDeletions = () => {\r\n        // Filtrar las filas que cumplen con la lógica de row-yellow\r\n        const filteredRows = rowData.filter((row, index, array) => {\r\n            if (index === 0) return false;\r\n\r\n            const filaAnterior = array[index - 1];\r\n            const camposAComparar = ['Día', 'RUT', 'fecha_reloj'];\r\n            const todosCamposIguales = camposAComparar.every(campo => row[campo] === filaAnterior[campo]);\r\n\r\n            if (!todosCamposIguales) return false;\r\n\r\n            // Comparar la diferencia de horas\r\n            const horaRelojActual = row['hora_reloj'];\r\n            const horaRelojAnterior = filaAnterior['hora_reloj'];\r\n\r\n            const [horaActualHoras, horaActualMinutos] = horaRelojActual.split(':').map(Number);\r\n            const [horaAnteriorHoras, horaAnteriorMinutos] = horaRelojAnterior.split(':').map(Number);\r\n\r\n            const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\r\n            const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\r\n\r\n            const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\r\n\r\n            // Devolver true si la diferencia es menor o igual a 5 minutos y los campos coinciden\r\n            return diferenciaMinutos <= 5;\r\n        });\r\n\r\n        setRowsToEdit(filteredRows);\r\n        setActiveAction('delete');\r\n        setIsModalOpen(true); // Abrir el modal de confirmación (opcional)\r\n    };\r\n\r\n    const applyChanges = () => {\r\n        let updatedRowData;\r\n    \r\n        if (activeAction === 'edit') {\r\n            updatedRowData = rowData.map(row => {\r\n                if (rowsToEdit.includes(row)) {\r\n                    return { ...row, hora_reloj: row['Hora Salida'] };\r\n                }\r\n                return row;\r\n            });\r\n        } else if (activeAction === 'delete') {\r\n            updatedRowData = rowData.filter(row => !rowsToEdit.includes(row));\r\n        }\r\n    \r\n        setRowData(updatedRowData);\r\n        setIsModalOpen(false);\r\n    };\r\n    \r\n    \r\n        return (\r\n            <>\r\n                <div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n                    <div style={{ flex: 1 }}>\r\n                        <h3>1-. Omisión de Marcaje</h3>\r\n                        <p>\r\n                            Permite que en aquellas filas donde la entrada no es marcada se le asigne el horario programado.\r\n                        </p>\r\n                    </div>\r\n                    <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                        <button\r\n                            onClick={prepareChanges}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#007bff',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                minWidth: '200px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Modificar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n                    <div style={{ flex: 1 }}>\r\n                        <h3>2-. Marcaje múltiple</h3>\r\n                        <p>\r\n                            Encuentra filas en donde se ha marcado mas de 1 vez, en un rango de tiempo de 5 minutos\r\n                        </p>\r\n                    </div>\r\n                    <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                        <button\r\n                            onClick={prepareDeletions}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#007bff',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                minWidth: '200px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Modificar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n                    <div style={{ flex: 1 }}>\r\n                        <h3>3-. Ajustar Entrada/Salida Incorrecta</h3>\r\n                        <p>\r\n                            Revisa que no existan dos entradas o dos salidas consecutivas para la misma persona.\r\n                        </p>\r\n                    </div>\r\n                    <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                        <button\r\n                            onClick={prepareChanges}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#007bff',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                minWidth: '200px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Modificar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <Modal\r\n                    isOpen={isModalOpen}\r\n                    onRequestClose={() => setIsModalOpen(false)}\r\n                    contentLabel=\"Confirmación de Cambios\"\r\n                    style={{\r\n                        content: {\r\n                            maxWidth: '500px',\r\n                            margin: 'auto',\r\n                            padding: '20px',\r\n                            borderRadius: '8px',\r\n                            border: '1px solid #ccc',\r\n                        }\r\n                    }}\r\n                >\r\n                    <h2 style={{ textAlign: 'center' }}>\r\n                        {activeAction === 'edit' ? 'Confirmar Edición' : 'Confirmar Eliminación'}\r\n                    </h2>\r\n                    <p>\r\n                        {activeAction === 'edit'\r\n                            ? 'Las siguientes filas serán editadas:'\r\n                            : 'Las siguientes filas serán eliminadas:'}\r\n                    </p>\r\n                    <ul style={{ paddingLeft: '20px' }}>\r\n                        {rowsToEdit.map((row, index) => (\r\n                            <li key={index}>\r\n                                Día: {row['Día']}, RUT: {row['RUT']}, Hora Reloj: {row['hora_reloj']}\r\n                                <>\r\n                                <br />\r\n                                <strong>Nuevos valores:</strong> \r\n                                <span style={{ color: '#28a745' }}>\r\n                                    Día: {row.newDay || row['Día']}, Hora: {row.newHour || row['hora_reloj']}\r\n                                </span>\r\n                            </>\r\n                        {'}'}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                        <button\r\n                            onClick={applyChanges}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                marginRight: '10px',\r\n                                backgroundColor: '#28a745',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Confirmar\r\n                        </button>\r\n                        <button\r\n                            onClick={() => setIsModalOpen(false)}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#dc3545',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n\r\n    \r\n                <div className=\"ag-theme-alpine\" style={{ height: '400px', width: '100%' }}>\r\n                    <AgGridReact\r\n                        rowData={rowData}\r\n                        gridOptions={gridOptions}\r\n                        columnDefs={columnDefs}\r\n                        rowClassRules={rowClassRules}\r\n                        pagination={true}\r\n                        sorting={true}\r\n                        paginationPageSize={10} // Número de filas por página\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    \r\n    export default DataTable;\r\n    \r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}