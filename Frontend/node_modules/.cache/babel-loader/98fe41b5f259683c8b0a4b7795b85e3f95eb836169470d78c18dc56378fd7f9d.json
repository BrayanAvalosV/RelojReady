{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useReactTable, getCoreRowModel } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  data = []\n}) => {\n  _s();\n  // Asignamos un valor predeterminado de array vacío\n  // Define las columnas de la tabla\n  const columns = useMemo(() => [{\n    accessorKey: 'name',\n    // Clave de datos en tu objeto\n    header: 'Nombre' // Encabezado de columna\n  }, {\n    accessorKey: 'age',\n    header: 'Edad'\n  }, {\n    accessorKey: 'occupation',\n    header: 'Ocupación'\n  }], []);\n\n  // Configura la tabla con useReactTable\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: [header.column.columnDef.header, \" \"]\n        }, header.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: cell.getValue()\n        }, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this))\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Table, \"4hPNPOVD6NmFgooi8etqClAnRtQ=\", false, function () {\n  return [useReactTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useMemo","useReactTable","getCoreRowModel","jsxDEV","_jsxDEV","Table","data","_s","columns","accessorKey","header","table","children","getHeaderGroups","map","headerGroup","headers","column","columnDef","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","getValue","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/Table.js"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { useReactTable, getCoreRowModel } from '@tanstack/react-table';\r\n\r\nconst Table = ({ data = [] }) => {  // Asignamos un valor predeterminado de array vacío\r\n    // Define las columnas de la tabla\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                accessorKey: 'name', // Clave de datos en tu objeto\r\n                header: 'Nombre', // Encabezado de columna\r\n            },\r\n            {\r\n                accessorKey: 'age',\r\n                header: 'Edad',\r\n            },\r\n            {\r\n                accessorKey: 'occupation',\r\n                header: 'Ocupación',\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    // Configura la tabla con useReactTable\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                {table.getHeaderGroups().map(headerGroup => (\r\n                    <tr key={headerGroup.id}>\r\n                        {headerGroup.headers.map(header => (\r\n                            <th key={header.id}>\r\n                                {header.column.columnDef.header} {/* Muestra el encabezado */}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody>\r\n                {table.getRowModel().rows.map(row => (\r\n                    <tr key={row.id}>\r\n                        {row.getVisibleCells().map(cell => (\r\n                            <td key={cell.id}>{cell.getValue()}</td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,aAAa,EAAEC,eAAe,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAAG;EAChC;EACA,MAAMC,OAAO,GAAGR,OAAO,CACnB,MAAM,CACF;IACIS,WAAW,EAAE,MAAM;IAAE;IACrBC,MAAM,EAAE,QAAQ,CAAE;EACtB,CAAC,EACD;IACID,WAAW,EAAE,KAAK;IAClBC,MAAM,EAAE;EACZ,CAAC,EACD;IACID,WAAW,EAAE,YAAY;IACzBC,MAAM,EAAE;EACZ,CAAC,CACJ,EACD,EACJ,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGV,aAAa,CAAC;IACxBK,IAAI;IACJE,OAAO;IACPN,eAAe,EAAEA,eAAe,CAAC;EACrC,CAAC,CAAC;EAEF,oBACIE,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EACKD,KAAK,CAACE,eAAe,CAAC,CAAC,CAACC,GAAG,CAACC,WAAW,iBACpCX,OAAA;QAAAQ,QAAA,EACKG,WAAW,CAACC,OAAO,CAACF,GAAG,CAACJ,MAAM,iBAC3BN,OAAA;UAAAQ,QAAA,GACKF,MAAM,CAACO,MAAM,CAACC,SAAS,CAACR,MAAM,EAAC,GAAC;QAAA,GAD5BA,MAAM,CAACS,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACP;MAAC,GALGR,WAAW,CAACI,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMnB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACRnB,OAAA;MAAAQ,QAAA,EACKD,KAAK,CAACa,WAAW,CAAC,CAAC,CAACC,IAAI,CAACX,GAAG,CAACY,GAAG,iBAC7BtB,OAAA;QAAAQ,QAAA,EACKc,GAAG,CAACC,eAAe,CAAC,CAAC,CAACb,GAAG,CAACc,IAAI,iBAC3BxB,OAAA;UAAAQ,QAAA,EAAmBgB,IAAI,CAACC,QAAQ,CAAC;QAAC,GAAzBD,IAAI,CAACT,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CAC1C;MAAC,GAHGG,GAAG,CAACP,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAAChB,EAAA,CAnDIF,KAAK;EAAA,QAqBOJ,aAAa;AAAA;AAAA6B,EAAA,GArBzBzB,KAAK;AAqDX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}