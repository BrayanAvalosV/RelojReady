{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport Modal from 'react-modal';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\nimport '../style-table.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst DataTable = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [rowsToEdit, setRowsToEdit] = useState([]);\n  const [activeAction, setActiveAction] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data').then(response => response.json()).then(data => {\n      const processedData = processErrors(data); // Procesar errores al cargar\n      setRowData(processedData);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Procesar errores en los datos\n  const processErrors = data => {\n    return data.map((row, index, array) => {\n      let error = '';\n\n      // Error 1: Omisión de marcaje\n      if (row['entrada/salida'] === 3 && row['hora_reloj'] === '00:00' && row['Hora Salida'] !== '00:00') {\n        error = '1';\n      }\n\n      // Error 2: Marcaje múltiple en 5 minutos\n      if (index > 0) {\n        const prevRow = array[index - 1];\n        const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\n        const todosCamposIguales = camposAComparar.every(campo => row[campo] === prevRow[campo]);\n        if (todosCamposIguales) {\n          // Extraer horas y minutos de las marcas actuales y previas\n          const [horaActualHoras, horaActualMinutos] = row['hora_reloj'].split(':').map(Number);\n          const [horaAnteriorHoras, horaAnteriorMinutos] = prevRow['hora_reloj'].split(':').map(Number);\n\n          // Crear objetos de fecha solo para comparar tiempos\n          const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\n          const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\n\n          // Calcular la diferencia en minutos\n          const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\n\n          // Depuración: Imprimir la diferencia calculada\n          console.log(`Diferencia entre ${prevRow['hora_reloj']} y ${row['hora_reloj']}: ${diferenciaMinutos} minutos`);\n\n          // Solo marcar error si la diferencia es menor o igual a 5 minutos\n          if (diferenciaMinutos <= 5) {\n            error = '2';\n          }\n        }\n      }\n\n      // Error 3: Inversión de entrada/salida\n      if (index > 0) {\n        const prevRow = array.slice(0, index).reverse().find(r => r['RUT'] === row['RUT']);\n        if (prevRow) {\n          const esEntradaActual = row['entrada/salida'] === 1;\n          const esSalidaActual = row['entrada/salida'] === 3;\n          const esEntradaPrev = prevRow['entrada/salida'] === 1;\n          const esSalidaPrev = prevRow['entrada/salida'] === 3;\n          if (esEntradaActual && esEntradaPrev || esSalidaActual && esSalidaPrev) {\n            //error = '3';\n          }\n        }\n      }\n      return {\n        ...row,\n        'Error encontrado': error\n      };\n    });\n  };\n  const columnDefs = [{\n    headerName: 'Día',\n    field: 'Día',\n    flex: 1\n  }, {\n    headerName: 'RUT',\n    field: 'RUT',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada/Salida',\n    field: 'entrada/salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Fecha reloj',\n    field: 'fecha_reloj',\n    flex: 1\n  }, {\n    headerName: 'Hora reloj',\n    field: 'hora_reloj',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada Horario',\n    field: 'Hora Entrada',\n    flex: 1\n  }, {\n    headerName: 'Salida Horario',\n    field: 'Hora Salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Error encontrado',\n    field: 'Error encontrado',\n    flex: 1\n  }];\n  const onCellValueChanged = params => {\n    const updatedRowData = processErrors([...rowData]);\n    setRowData(updatedRowData);\n  };\n  const handleOmission = () => {\n    const affectedRows = rowData.filter(row => row['Error encontrado'] === '1');\n    setRowsToEdit(affectedRows);\n    setActiveAction('edit');\n    setIsModalOpen(true);\n  };\n  const handleMultipleMarks = () => {\n    const affectedRows = rowData.filter(row => row['Error encontrado'] === '2');\n    setRowsToEdit(affectedRows);\n    setActiveAction('delete');\n    setIsModalOpen(true);\n  };\n  const handleIncorrectEntryExit = () => {\n    const affectedRows = rowData.filter(row => row['Error encontrado'] === '3');\n    affectedRows.forEach(row => {\n      row['entrada/salida'] = row['entrada/salida'] === '1' ? '3' : '1';\n    });\n    setRowsToEdit(affectedRows);\n    setActiveAction('ajuste');\n    setIsModalOpen(true);\n  };\n  const applyChanges = () => {\n    let updatedRowData;\n    if (activeAction === 'edit') {\n      updatedRowData = rowData.map(row => {\n        // Si la fila está en rowsToEdit, actualiza la columna 'Error Encontrado'\n        if (rowsToEdit.some(editRow => editRow === row)) {\n          // Actualizar la columna 'Error Encontrado' con el nuevo valor\n          const updatedRow = {\n            ...row,\n            hora_reloj: row['Hora Salida'],\n            'Error encontrado': '' // Cambiar el texto de la columna 'Error Encontrado'\n          };\n          return updatedRow;\n        }\n        return row;\n      });\n    } else if (activeAction === 'delete') {\n      updatedRowData = rowData.filter(row => !rowsToEdit.some(editRow => editRow === row));\n    }\n    setRowData(updatedRowData);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Omisi\\xF3n de Marcaje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Permite que en aquellas filas donde la entrada no es marcada se le asigne el horario programado.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOmission,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Marcaje m\\xFAltiple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Encuentra filas en donde se ha marcado m\\xE1s de 1 vez, en un rango de tiempo de 5 minutos.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMultipleMarks,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ajustar Entrada/Salida Incorrecta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Revisa que no existan dos entradas o dos salidas consecutivas para la misma persona.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleIncorrectEntryExit,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: () => setIsModalOpen(false),\n        contentLabel: \"Confirmaci\\xF3n de Cambios\",\n        style: {\n          content: {\n            maxWidth: '500px',\n            margin: 'auto',\n            padding: '20px',\n            borderRadius: '8px',\n            border: '1px solid #ccc'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: activeAction === 'edit' ? 'Confirmar Edición' : activeAction === 'delete' ? 'Confirmar Eliminación' : 'Acción'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: activeAction === 'edit' ? 'Las siguientes filas serán editadas:' : activeAction === 'delete' ? 'Las siguientes filas serán eliminadas:' : 'Detalles de la acción:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            paddingLeft: '20px'\n          },\n          children: rowsToEdit.map((row, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"D\\xEDa: \", row['Día'], \", RUT: \", row['RUT'], \", Hora Reloj: \", row['hora_reloj'], activeAction === 'edit' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Nuevos valores:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#28a745'\n                },\n                children: [\"D\\xEDa: \", row.newDay || row['Día'], \", Nueva Hora Reloj: \", row.newHour || row['Hora Salida']]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyChanges,\n            style: {\n              padding: '10px 20px',\n              marginRight: '10px',\n              backgroundColor: '#28a745',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            children: \"Confirmar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(false),\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#dc3545',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ag-theme-alpine\",\n          style: {\n            height: '600px',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n            rowData: rowData,\n            columnDefs: columnDefs,\n            rowClassRules: {\n              'row-red': params => params.data['Error encontrado'] === '1',\n              'row-yellow': params => params.data['Error encontrado'] === '2'\n              //'row-orange': params => params.data['Error encontrado'] === '3',\n            },\n            defaultColDef: {\n              editable: true,\n              flex: 1\n            },\n            onCellValueChanged: onCellValueChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(DataTable, \"jwi8nYWEPZPTTjzc8XYzInnOAOc=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useEffect","useState","AgGridReact","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","DataTable","_s","rowData","setRowData","isModalOpen","setIsModalOpen","rowsToEdit","setRowsToEdit","activeAction","setActiveAction","fetch","then","response","json","data","processedData","processErrors","catch","error","console","map","row","index","array","prevRow","camposAComparar","todosCamposIguales","every","campo","horaActualHoras","horaActualMinutos","split","Number","horaAnteriorHoras","horaAnteriorMinutos","fechaActual","Date","fechaAnterior","diferenciaMinutos","Math","abs","log","slice","reverse","find","r","esEntradaActual","esSalidaActual","esEntradaPrev","esSalidaPrev","columnDefs","headerName","field","flex","editable","onCellValueChanged","params","updatedRowData","handleOmission","affectedRows","filter","handleMultipleMarks","handleIncorrectEntryExit","forEach","applyChanges","some","editRow","updatedRow","hora_reloj","children","style","display","alignItems","width","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","justifyContent","onClick","padding","backgroundColor","color","border","borderRadius","minWidth","cursor","isOpen","onRequestClose","contentLabel","content","maxWidth","margin","textAlign","paddingLeft","newDay","newHour","marginTop","marginRight","className","height","rowClassRules","defaultColDef","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport Modal from 'react-modal';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport '../style-table.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst DataTable = () => {\r\n    const [rowData, setRowData] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [rowsToEdit, setRowsToEdit] = useState([]);\r\n    const [activeAction, setActiveAction] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/data')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const processedData = processErrors(data); // Procesar errores al cargar\r\n                setRowData(processedData);\r\n            })\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []);\r\n\r\n    // Procesar errores en los datos\r\n    const processErrors = (data) => {\r\n        return data.map((row, index, array) => {\r\n            let error = '';\r\n\r\n            // Error 1: Omisión de marcaje\r\n            if (\r\n                row['entrada/salida'] === 3 &&\r\n                row['hora_reloj'] === '00:00' &&\r\n                row['Hora Salida'] !== '00:00'\r\n            ) {\r\n                error = '1';\r\n            }\r\n\r\n            // Error 2: Marcaje múltiple en 5 minutos\r\n            if (index > 0) {\r\n                const prevRow = array[index - 1];\r\n                const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\r\n                const todosCamposIguales = camposAComparar.every(campo => row[campo] === prevRow[campo]);\r\n            \r\n                if (todosCamposIguales) {\r\n                    // Extraer horas y minutos de las marcas actuales y previas\r\n                    const [horaActualHoras, horaActualMinutos] = row['hora_reloj'].split(':').map(Number);\r\n                    const [horaAnteriorHoras, horaAnteriorMinutos] = prevRow['hora_reloj'].split(':').map(Number);\r\n            \r\n                    // Crear objetos de fecha solo para comparar tiempos\r\n                    const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\r\n                    const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\r\n            \r\n                    // Calcular la diferencia en minutos\r\n                    const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\r\n            \r\n                    // Depuración: Imprimir la diferencia calculada\r\n                    console.log(`Diferencia entre ${prevRow['hora_reloj']} y ${row['hora_reloj']}: ${diferenciaMinutos} minutos`);\r\n            \r\n                    // Solo marcar error si la diferencia es menor o igual a 5 minutos\r\n                    if (diferenciaMinutos <= 5) {\r\n                        error = '2';\r\n                    }\r\n                }\r\n            }\r\n            \r\n            \r\n\r\n            // Error 3: Inversión de entrada/salida\r\n            if (index > 0) {\r\n                const prevRow = array.slice(0, index).reverse().find(r => r['RUT'] === row['RUT']);\r\n                if (prevRow) {\r\n                    const esEntradaActual = row['entrada/salida'] === 1;\r\n                    const esSalidaActual = row['entrada/salida'] === 3;\r\n                    const esEntradaPrev = prevRow['entrada/salida'] === 1;\r\n                    const esSalidaPrev = prevRow['entrada/salida'] === 3;\r\n\r\n                    if ((esEntradaActual && esEntradaPrev) || (esSalidaActual && esSalidaPrev)) {\r\n                        //error = '3';\r\n                    }\r\n                }\r\n            }\r\n\r\n            return { ...row, 'Error encontrado': error };\r\n        });\r\n    };\r\n\r\n    const columnDefs = [\r\n        { headerName: 'Día', field: 'Día', flex: 1 },\r\n        { headerName: 'RUT', field: 'RUT', editable: true, flex: 1 },\r\n        { headerName: 'Entrada/Salida', field: 'entrada/salida', editable: true, flex: 1 },\r\n        { headerName: 'Fecha reloj', field: 'fecha_reloj', flex: 1 },\r\n        { headerName: 'Hora reloj', field: 'hora_reloj', editable: true, flex: 1 },\r\n        { headerName: 'Entrada Horario', field: 'Hora Entrada', flex: 1 },\r\n        { headerName: 'Salida Horario', field: 'Hora Salida', editable: true, flex: 1 },\r\n        { headerName: 'Error encontrado', field: 'Error encontrado', flex: 1 },\r\n    ];\r\n\r\n    const onCellValueChanged = (params) => {\r\n        const updatedRowData = processErrors([...rowData]);\r\n        setRowData(updatedRowData);\r\n    };\r\n\r\n    const handleOmission = () => {\r\n        const affectedRows = rowData.filter((row) => row['Error encontrado'] === '1');\r\n        setRowsToEdit(affectedRows);\r\n        setActiveAction('edit');\r\n        setIsModalOpen(true);\r\n    };\r\n    \r\n    const handleMultipleMarks = () => {\r\n        const affectedRows = rowData.filter((row) => row['Error encontrado'] === '2');\r\n        setRowsToEdit(affectedRows);\r\n        setActiveAction('delete');\r\n        setIsModalOpen(true);\r\n    };\r\n    \r\n    const handleIncorrectEntryExit = () => {\r\n        const affectedRows = rowData.filter((row) => row['Error encontrado'] === '3');\r\n        affectedRows.forEach((row) => {\r\n            row['entrada/salida'] = row['entrada/salida'] === '1' ? '3' : '1';\r\n        });\r\n        setRowsToEdit(affectedRows);\r\n        setActiveAction('ajuste');\r\n        setIsModalOpen(true);\r\n    };\r\n    \r\n    const applyChanges = () => {\r\n        let updatedRowData;\r\n        \r\n        if (activeAction === 'edit') {\r\n            updatedRowData = rowData.map(row => {\r\n                // Si la fila está en rowsToEdit, actualiza la columna 'Error Encontrado'\r\n                if (rowsToEdit.some(editRow => editRow === row)) {\r\n                    // Actualizar la columna 'Error Encontrado' con el nuevo valor\r\n                    const updatedRow = { ...row, \r\n                        hora_reloj: row['Hora Salida'], \r\n                        'Error encontrado': ''  // Cambiar el texto de la columna 'Error Encontrado'\r\n                    };\r\n                    return updatedRow;\r\n                }\r\n                return row;\r\n            });\r\n        } else if (activeAction === 'delete') {\r\n            updatedRowData = rowData.filter(row => !rowsToEdit.some(editRow => editRow === row));\r\n        }\r\n    \r\n        setRowData(updatedRowData);\r\n        setIsModalOpen(false);\r\n    };\r\n    \r\n\r\n    return (\r\n        <><div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n            {/* Caso 1: Omisión de Marcaje */}\r\n            <div style={{ flex: 1 }}>\r\n                <h3>Omisión de Marcaje</h3>\r\n                <p>\r\n                    Permite que en aquellas filas donde la entrada no es marcada se le asigne el horario programado.\r\n                </p>\r\n            </div>\r\n            <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                <button\r\n                    onClick={handleOmission}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        backgroundColor: '#007bff',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        minWidth: '200px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    Modificar\r\n                </button>\r\n            </div>\r\n        </div><div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n                {/* Caso 2: Marcaje Múltiple */}\r\n                <div style={{ flex: 1 }}>\r\n                    <h3>Marcaje múltiple</h3>\r\n                    <p>\r\n                        Encuentra filas en donde se ha marcado más de 1 vez, en un rango de tiempo de 5 minutos.\r\n                    </p>\r\n                </div>\r\n                <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                    <button\r\n                        onClick={handleMultipleMarks}\r\n                        style={{\r\n                            padding: '10px 20px',\r\n                            backgroundColor: '#007bff',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                            borderRadius: '5px',\r\n                            minWidth: '200px',\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    >\r\n                        Modificar\r\n                    </button>\r\n                </div>\r\n            </div><div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n                {/* Caso 3: Entrada/Salida Incorrecta */}\r\n                <div style={{ flex: 1 }}>\r\n                    <h3>Ajustar Entrada/Salida Incorrecta</h3>\r\n                    <p>\r\n                        Revisa que no existan dos entradas o dos salidas consecutivas para la misma persona.\r\n                    </p>\r\n                </div>\r\n                <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                    <button\r\n                        onClick={handleIncorrectEntryExit}\r\n                        style={{\r\n                            padding: '10px 20px',\r\n                            backgroundColor: '#007bff',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                            borderRadius: '5px',\r\n                            minWidth: '200px',\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    >\r\n                        Modificar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n                            <><Modal\r\n                    isOpen={isModalOpen}\r\n                    onRequestClose={() => setIsModalOpen(false)}\r\n                    contentLabel=\"Confirmación de Cambios\"\r\n                    style={{\r\n                        content: {\r\n                            maxWidth: '500px',\r\n                            margin: 'auto',\r\n                            padding: '20px',\r\n                            borderRadius: '8px',\r\n                            border: '1px solid #ccc',\r\n                        }\r\n                    }}\r\n                >\r\n                    <h2 style={{ textAlign: 'center' }}>\r\n                        {activeAction === 'edit' ? 'Confirmar Edición' : activeAction === 'delete' ? 'Confirmar Eliminación' : 'Acción'}\r\n                    </h2>\r\n                    <p>\r\n                        {activeAction === 'edit'\r\n                            ? 'Las siguientes filas serán editadas:'\r\n                            : activeAction === 'delete'\r\n                            ? 'Las siguientes filas serán eliminadas:'\r\n                            : 'Detalles de la acción:'}\r\n                    </p>\r\n                    <ul style={{ paddingLeft: '20px' }}>\r\n                        {rowsToEdit.map((row, index) => (\r\n                            <li key={index}>\r\n                                Día: {row['Día']}, RUT: {row['RUT']}, Hora Reloj: {row['hora_reloj']}\r\n                                {activeAction === 'edit' && (\r\n                                    <>\r\n                                        <br />\r\n                                        <strong>Nuevos valores:</strong> \r\n                                        <span style={{ color: '#28a745' }}>\r\n                                            Día: {row.newDay || row['Día']}, Nueva Hora Reloj: {row.newHour || row['Hora Salida']}\r\n                                        </span>\r\n                                    </>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                        <button\r\n                            onClick={applyChanges}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                marginRight: '10px',\r\n                                backgroundColor: '#28a745',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Confirmar\r\n                        </button>\r\n                        <button\r\n                            onClick={() => setIsModalOpen(false)}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#dc3545',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </Modal><>\r\n\r\n                    <div className=\"ag-theme-alpine\" style={{ height: '600px', width: '100%' }}>\r\n                        <AgGridReact\r\n                            rowData={rowData}\r\n                            columnDefs={columnDefs}\r\n                            rowClassRules={{\r\n                                'row-red': params => params.data['Error encontrado'] === '1',\r\n                                'row-yellow': params => params.data['Error encontrado'] === '2',\r\n                                //'row-orange': params => params.data['Error encontrado'] === '3',\r\n                            }}\r\n                            defaultColDef={{ editable: true, flex: 1 }}\r\n                            onCellValueChanged={onCellValueChanged} />\r\n                    </div>\r\n                </></></>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}