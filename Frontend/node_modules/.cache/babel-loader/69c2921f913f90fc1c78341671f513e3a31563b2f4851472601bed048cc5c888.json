{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useReactTable } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Fetch data desde el backend\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data').then(response => response.json()).then(data => {\n      console.log(data); // Verifica la estructura de los datos\n      setData(data);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Define las columnas\n  const columns = React.useMemo(() => [{\n    header: 'Día',\n    accessorKey: 'Día'\n  }, {\n    header: 'Hora Entrada',\n    accessorKey: 'Hora Entrada'\n  }, {\n    header: 'Hora Salida',\n    accessorKey: 'Hora Salida'\n  }, {\n    header: 'Código Horario',\n    accessorKey: 'Código Horario'\n  }, {\n    header: 'entrada/salida',\n    accessorKey: 'entrada/salida'\n  }, {\n    header: 'hora_reloj',\n    accessorKey: 'hora_reloj'\n  }, {\n    header: 'fecha_reloj',\n    accessorKey: 'fecha_reloj'\n  }], []);\n\n  // Configura la tabla con useReactTable\n  const table = useReactTable({\n    data,\n    columns\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      border: 'solid 1px black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: 'solid 1px gray'\n          },\n          children: header.getIsPlaceholder() ? null : header.renderHeader()\n        }, header.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            border: 'solid 1px gray'\n          },\n          children: cell.renderCell()\n        }, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this))\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Table, \"0Jcx5zw0/zEU1yzEkZqzQXEXMM4=\", false, function () {\n  return [useReactTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","useReactTable","jsxDEV","_jsxDEV","Table","_s","data","setData","fetch","then","response","json","console","log","catch","error","columns","useMemo","header","accessorKey","table","style","border","children","getHeaderGroups","map","headerGroup","headers","getIsPlaceholder","renderHeader","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","renderCell","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/Table.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useReactTable } from '@tanstack/react-table';\r\n\r\nconst Table = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    // Fetch data desde el backend\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/data')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data); // Verifica la estructura de los datos\r\n                setData(data);\r\n            })\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []);\r\n    \r\n\r\n    // Define las columnas\r\n    const columns = React.useMemo(\r\n        () => [\r\n            { header: 'Día', accessorKey: 'Día' },\r\n            { header: 'Hora Entrada', accessorKey: 'Hora Entrada' },\r\n            { header: 'Hora Salida', accessorKey: 'Hora Salida' },\r\n            { header: 'Código Horario', accessorKey: 'Código Horario' },\r\n            { header: 'entrada/salida', accessorKey: 'entrada/salida' },\r\n            { header: 'hora_reloj', accessorKey: 'hora_reloj' },\r\n            { header: 'fecha_reloj', accessorKey: 'fecha_reloj' },\r\n        ],\r\n        []\r\n    );\r\n\r\n    // Configura la tabla con useReactTable\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n    });\r\n\r\n    return (\r\n        <table style={{ border: 'solid 1px black' }}>\r\n            <thead>\r\n                {table.getHeaderGroups().map(headerGroup => (\r\n                    <tr key={headerGroup.id}>\r\n                        {headerGroup.headers.map(header => (\r\n                            <th key={header.id} style={{ border: 'solid 1px gray' }}>\r\n                                {header.getIsPlaceholder() ? null : header.renderHeader()}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody>\r\n                {table.getRowModel().rows.map(row => (\r\n                    <tr key={row.id}>\r\n                        {row.getVisibleCells().map(cell => (\r\n                            <td key={cell.id} style={{ border: 'solid 1px gray' }}>\r\n                                {cell.renderCell()}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}