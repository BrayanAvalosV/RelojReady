{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useReactTable, getCoreRowModel } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/api/data');\n        if (!response.ok) throw new Error('Network response was not ok');\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const columns = useMemo(() => [{\n    accessorKey: 'Hora Entrada',\n    // Ajusta a la clave real en tu data\n    header: 'Hora Entrada'\n  }, {\n    accessorKey: 'Hora Salida',\n    // Ajusta a la clave real en tu data\n    header: 'Hora Salida'\n  }, {\n    accessorKey: 'RUT',\n    // Ajusta a la clave real en tu data\n    header: 'RUT'\n  }], []);\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tabla de Datos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.column.columnDef.header\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell.getValue()\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"mFzWHtiJJSAL2hUHbyrlQpNWr8E=\", false, function () {\n  return [useReactTable];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useReactTable","getCoreRowModel","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","fetchData","response","fetch","ok","Error","jsonData","json","error","console","columns","accessorKey","header","table","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getHeaderGroups","map","headerGroup","headers","column","columnDef","id","getRowModel","rows","row","getVisibleCells","cell","getValue","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/Table.js"],"sourcesContent":["// App.js\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { useReactTable, getCoreRowModel } from '@tanstack/react-table';\r\n\r\nconst App = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:5000/api/data');\r\n                if (!response.ok) throw new Error('Network response was not ok');\r\n                const jsonData = await response.json();\r\n                setData(jsonData);\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                accessorKey: 'Hora Entrada', // Ajusta a la clave real en tu data\r\n                header: 'Hora Entrada',\r\n            },\r\n            {\r\n                accessorKey: 'Hora Salida', // Ajusta a la clave real en tu data\r\n                header: 'Hora Salida',\r\n            },\r\n            {\r\n                accessorKey: 'RUT', // Ajusta a la clave real en tu data\r\n                header: 'RUT',\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n    });\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Tabla de Datos</h1>\r\n            {loading ? (\r\n                <p>Cargando datos...</p>\r\n            ) : (\r\n                <table>\r\n                    <thead>\r\n                        {table.getHeaderGroups().map(headerGroup => (\r\n                            <tr key={headerGroup.id}>\r\n                                {headerGroup.headers.map(header => (\r\n                                    <th key={header.id}>\r\n                                        {header.column.columnDef.header}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody>\r\n                        {table.getRowModel().rows.map(row => (\r\n                            <tr key={row.id}>\r\n                                {row.getVisibleCells().map(cell => (\r\n                                    <td key={cell.id}>{cell.getValue()}</td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}