{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\backend\\\\frontend-carga\\\\src\\\\components\\\\UploadComponent.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport fileIcon from '../file-icon.png'; // Asegúrate de que este archivo esté en la carpeta public\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadComponent = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const onDrop = acceptedFiles => {\n    const selectedFile = acceptedFiles[0];\n    setFile(selectedFile);\n    uploadFile(selectedFile);\n  };\n  const uploadFile = file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('http://localhost:5000/upload-reloj', {\n      // Cambia la URL según tu configuración\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        setMessage(`Error: ${data.error}`);\n      } else {\n        setMessage(`Archivo ${file.name} subido exitosamente!`);\n      }\n    }).catch(error => {\n      console.error('Error al subir el archivo:', error);\n      setMessage('Error al subir el archivo. Inténtalo de nuevo.');\n    });\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Carga Reloj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fileIcon,\n        alt: \"File icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), file ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Archivo seleccionado: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Arrastra y suelta un archivo aqu\\xED, o haz clic para seleccionar uno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 68\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadComponent, \"X65uLSpPoIRrl9MYIOTszV1CU08=\", false, function () {\n  return [useDropzone];\n});\n_c = UploadComponent;\nexport default UploadComponent;\nvar _c;\n$RefreshReg$(_c, \"UploadComponent\");","map":{"version":3,"names":["React","useDropzone","fileIcon","jsxDEV","_jsxDEV","UploadComponent","_s","file","setFile","useState","message","setMessage","onDrop","acceptedFiles","selectedFile","uploadFile","formData","FormData","append","fetch","method","body","then","response","json","data","error","name","catch","console","getRootProps","getInputProps","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/backend/frontend-carga/src/components/UploadComponent.js"],"sourcesContent":["import React from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport fileIcon from '../file-icon.png'; // Asegúrate de que este archivo esté en la carpeta public\r\nimport '../styles.css';\r\n\r\n\r\nconst UploadComponent = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const onDrop = (acceptedFiles) => {\r\n        const selectedFile = acceptedFiles[0];\r\n        setFile(selectedFile);\r\n        uploadFile(selectedFile);\r\n    };\r\n\r\n    const uploadFile = (file) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        fetch('http://localhost:5000/upload-reloj', { // Cambia la URL según tu configuración\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                setMessage(`Error: ${data.error}`);\r\n            } else {\r\n                setMessage(`Archivo ${file.name} subido exitosamente!`);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error al subir el archivo:', error);\r\n            setMessage('Error al subir el archivo. Inténtalo de nuevo.');\r\n        });\r\n    };\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n    return (\r\n        <div>\r\n            <h2>Carga Reloj</h2>\r\n            <div className=\"upload-area\" {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                <img src={fileIcon} alt=\"File icon\" />\r\n                {file ? <p>Archivo seleccionado: {file.name}</p> : <p>Arrastra y suelta un archivo aquí, o haz clic para seleccionar uno</p>}\r\n            </div>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}