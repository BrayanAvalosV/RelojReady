{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport Modal from 'react-modal';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../style-table.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst DataTable = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const [rowsToEdit, setRowsToEdit] = useState([]);\n  const [rowsToDelete, setRowsToDelete] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeAction, setActiveAction] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data').then(response => response.json()).then(data => setRowData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const renderImage = params => {\n    // Aquí puedes personalizar la lógica para mostrar diferentes imágenes, dependiendo de los datos de la fila\n    const imageUrl = 'https://via.placeholder.com/50'; // URL de la imagen\n\n    // Retorna una imagen con el src basado en la URL\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Estado\",\n      style: {\n        width: '50px',\n        height: '50px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  };\n  const columnDefs = [{\n    headerName: 'Día',\n    field: 'Día',\n    flex: 1\n  }, {\n    headerName: 'RUT',\n    field: 'RUT',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada/Salida',\n    field: 'entrada/salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Fecha reloj',\n    field: 'fecha_reloj',\n    flex: 1\n  }, {\n    headerName: 'Hora reloj',\n    field: 'hora_reloj',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada Horario',\n    field: 'Hora Entrada',\n    flex: 1\n  }, {\n    headerName: 'Salida Horario',\n    field: 'Hora Salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Error encontrado',\n    field: 'Error encontrado',\n    flex: 1\n  }, {\n    headerName: \"Estado\",\n    field: \"estado\",\n    // El campo en tus datos\n    //cellRendererFramework: renderImage,\n    flex: 1\n  }];\n  const gridOptions = {\n    columnDefs: columnDefs,\n    defaultColDef: {\n      resizable: false,\n      // Deshabilitar el redimensionamiento globalmente\n      sortable: false\n    }\n  };\n  const rowClassRules = {\n    'row-red': params => {\n      if (params.data['entrada/salida'] === 3 && params.data['hora_reloj'] === \"00:00\" && params.data['Hora Salida'] !== \"00:00\") {\n        params.data['Error encontrado'] = '1';\n        setRowData(prevRowData => [...prevRowData]);\n        return true;\n      }\n      return false;\n    },\n    'row-yellow': params => {\n      const filaActual = params.data;\n\n      // Si esta es la primera fila, no hay filas anteriores\n      if (params.node.rowIndex === 0) return false;\n\n      // Acceder a todas las filas anteriores\n      for (let i = 0; i < params.node.rowIndex; i++) {\n        const filaAnterior = params.api.getDisplayedRowAtIndex(i);\n        if (!filaAnterior || !filaAnterior.data) continue;\n\n        // Comparar cada campo especificado entre la fila actual y la fila anterior\n        const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\n        const todosCamposIguales = camposAComparar.every(campo => filaActual[campo] === filaAnterior.data[campo]);\n        if (!todosCamposIguales) continue;\n\n        // Si todos los campos coinciden, comparar la diferencia de horas\n        const horaRelojActual = filaActual['hora_reloj'];\n        const horaRelojAnterior = filaAnterior.data['hora_reloj'];\n        const [horaActualHoras, horaActualMinutos] = horaRelojActual.split(':').map(Number);\n        const [horaAnteriorHoras, horaAnteriorMinutos] = horaRelojAnterior.split(':').map(Number);\n        const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\n        const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\n        const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\n\n        // Retornar true si la diferencia es menor o igual a 5 minutos y todos los campos coinciden\n        if (diferenciaMinutos <= 5) {\n          filaActual['Error encontrado'] = '2';\n          setRowData(prevRowData => [...prevRowData]);\n          return true;\n        }\n      }\n      return false;\n    },\n    'row-orange': params => {\n      const filaActual = params.data;\n      const rutActual = filaActual['RUT'];\n\n      // Obtener todas las filas anteriores con el mismo RUT\n      const filasPrevias = [];\n      params.api.forEachNode((node, index) => {\n        if (index < params.node.rowIndex && node.data['RUT'] === rutActual) {\n          filasPrevias.push(node.data);\n        }\n      });\n\n      // Si no hay filas previas con el mismo RUT, no hay error posible\n      if (filasPrevias.length === 0) return false;\n\n      // Obtener el último marcaje registrado para el mismo RUT\n      const ultimoMarcaje = filasPrevias[filasPrevias.length - 1];\n\n      // Validar el tipo de entrada/salida\n      const esEntradaActual = filaActual['entrada/salida'] === 1; // Actual es \"entrada\"\n      const esSalidaActual = filaActual['entrada/salida'] === 3; // Actual es \"salida\"\n\n      const esEntradaUltima = ultimoMarcaje['entrada/salida'] === 1; // Última es \"entrada\"\n      const esSalidaUltima = ultimoMarcaje['entrada/salida'] === 3; // Última es \"salida\"\n\n      // Detectar error de marcaje\n      const errorInversionEntrada = esEntradaActual && esEntradaUltima; // Dos entradas seguidas\n      const errorInversionSalida = esSalidaActual && esSalidaUltima; // Dos salidas seguidas\n\n      // Retornar true si hay un error de inversión de entrada/salida\n      if (errorInversionEntrada || errorInversionSalida) {\n        return true;\n      }\n    }\n  };\n  const prepareChangesEntradaSalida = params => {\n    const filaActual = params.data;\n    const rutActual = filaActual['RUT'];\n\n    // Obtener todas las filas anteriores con el mismo RUT\n    const filasPrevias = [];\n    params.api.forEachNode((node, index) => {\n      if (index < params.node.rowIndex && node.data['RUT'] === rutActual) {\n        filasPrevias.push(node.data);\n      }\n    });\n\n    // Si no hay filas previas con el mismo RUT, no hay error posible\n    if (filasPrevias.length === 0) return false;\n\n    // Obtener el último marcaje registrado para el mismo RUT\n    const ultimoMarcaje = filasPrevias[filasPrevias.length - 1];\n\n    // Validar el tipo de entrada/salida\n    const esEntradaActual = filaActual['entrada/salida'] === 1; // Actual es \"entrada\"\n    const esSalidaActual = filaActual['entrada/salida'] === 3; // Actual es \"salida\"\n    const esEntradaUltima = ultimoMarcaje['entrada/salida'] === 1; // Última es \"entrada\"\n    const esSalidaUltima = ultimoMarcaje['entrada/salida'] === 3; // Última es \"salida\"\n\n    // Detectar error de marcaje\n    const errorInversionEntrada = esEntradaActual && esEntradaUltima; // Dos entradas seguidas\n    const errorInversionSalida = esSalidaActual && esSalidaUltima; // Dos salidas seguidas\n\n    // Si hay un error de inversión de entrada/salida\n    if (errorInversionEntrada || errorInversionSalida) {\n      // Cambiar el valor de \"entrada/salida\" al contrario\n      filaActual['entrada/salida'] = filaActual['entrada/salida'] === 1 ? 3 : 1;\n\n      // Marcar activeAction como verdadero\n      setActiveAction('editfinal');\n\n      // Actualizar los datos de la fila (esto depende de cómo estés gestionando los datos, por ejemplo, en una tabla o en un estado)\n      // Aquí se asume que tienes un estado para actualizar la tabla, por ejemplo:\n      params.api.refreshCells(); // Para actualizar la celda de la fila cambiada\n      return true;\n    }\n    return false;\n  };\n\n  // Preparar las filas a modificar y abrir el modal\n  const prepareChanges = () => {\n    const filteredRows = rowData.filter(row => row['entrada/salida'] === 3 && row['hora_reloj'] === \"00:00\" && row['Hora Salida'] !== \"00:00\");\n    setRowsToEdit(filteredRows);\n    setActiveAction('edit');\n    setIsModalOpen(true);\n  };\n  // Preparar las filas a eliminar y abrir el modal de confirmación (si deseas)\n  const prepareDeletions = () => {\n    // Filtrar las filas que cumplen con la lógica de row-yellow\n    const filteredRows = rowData.filter((row, index, array) => {\n      if (index === 0) return false;\n      const filaAnterior = array[index - 1];\n      const camposAComparar = ['Día', 'RUT', 'fecha_reloj'];\n      const todosCamposIguales = camposAComparar.every(campo => row[campo] === filaAnterior[campo]);\n      if (!todosCamposIguales) return false;\n\n      // Comparar la diferencia de horas\n      const horaRelojActual = row['hora_reloj'];\n      const horaRelojAnterior = filaAnterior['hora_reloj'];\n      const [horaActualHoras, horaActualMinutos] = horaRelojActual.split(':').map(Number);\n      const [horaAnteriorHoras, horaAnteriorMinutos] = horaRelojAnterior.split(':').map(Number);\n      const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\n      const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\n      const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\n\n      // Devolver true si la diferencia es menor o igual a 5 minutos y los campos coinciden\n      return diferenciaMinutos <= 5;\n    });\n    setRowsToEdit(filteredRows);\n    setActiveAction('delete');\n    setIsModalOpen(true); // Abrir el modal de confirmación (opcional)\n  };\n  const applyChanges = () => {\n    let updatedRowData;\n    if (activeAction === 'edit') {\n      updatedRowData = rowData.map(row => {\n        // Si la fila está en rowsToEdit, actualiza la columna 'Error Encontrado'\n        if (rowsToEdit.some(editRow => editRow === row)) {\n          // Actualizar la columna 'Error Encontrado' con el nuevo valor\n          const updatedRow = {\n            ...row,\n            hora_reloj: row['Hora Salida'],\n            'Error encontrado': '' // Cambiar el texto de la columna 'Error Encontrado'\n          };\n          return updatedRow;\n        }\n        return row;\n      });\n    } else if (activeAction === 'delete') {\n      updatedRowData = rowData.filter(row => !rowsToEdit.some(editRow => editRow === row));\n    }\n    setRowData(updatedRowData);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-exclamation-triangle\",\n      style: {\n        color: 'red'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"1-. Omisi\\xF3n de Marcaje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Permite que en aquellas filas donde la entrada no es marcada se le asigne el horario programado.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prepareChanges,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"2-. Marcaje m\\xFAltiple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Encuentra filas en donde se ha marcado mas de 1 vez, en un rango de tiempo de 5 minutos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prepareDeletions,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '65%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"3-. Ajustar Entrada/Salida Incorrecta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Revisa que no existan dos entradas o dos salidas consecutivas para la misma persona.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '5px',\n          display: 'flex',\n          justifyContent: 'center',\n          flex: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prepareChanges,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            minWidth: '200px',\n            cursor: 'pointer'\n          },\n          children: \"Modificar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Confirmaci\\xF3n de Cambios\",\n      style: {\n        content: {\n          maxWidth: '500px',\n          margin: 'auto',\n          padding: '20px',\n          borderRadius: '8px',\n          border: '1px solid #ccc'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: activeAction === 'edit' ? 'Confirmar Edición' : 'Confirmar Eliminación'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: activeAction === 'edit' ? 'Las siguientes filas serán editadas:' : 'Las siguientes filas serán eliminadas:'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          paddingLeft: '20px'\n        },\n        children: rowsToEdit.map((row, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"D\\xEDa: \", row['Día'], \", RUT: \", row['RUT'], \", Hora Reloj: \", row['hora_reloj'], activeAction === 'edit' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nuevos valores:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#28a745'\n              },\n              children: [\"D\\xEDa: \", row.newDay || row['Día'], \", Nueva Hora Reloj: \", row.newHour || row['Hora Salida']]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyChanges,\n          style: {\n            padding: '10px 20px',\n            marginRight: '10px',\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(false),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        height: '400px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: rowData,\n        gridOptions: gridOptions,\n        columnDefs: columnDefs,\n        rowClassRules: rowClassRules,\n        pagination: true,\n        sorting: true,\n        paginationPageSize: 10 // Número de filas por página\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(DataTable, \"nsDUMbIuHdB0rJjSaDGDT7OiPto=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useEffect","useState","AgGridReact","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","DataTable","_s","rowData","setRowData","rowsToEdit","setRowsToEdit","rowsToDelete","setRowsToDelete","isModalOpen","setIsModalOpen","activeAction","setActiveAction","fetch","then","response","json","data","catch","error","console","renderImage","params","imageUrl","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","columnDefs","headerName","field","flex","editable","gridOptions","defaultColDef","resizable","sortable","rowClassRules","prevRowData","filaActual","node","rowIndex","i","filaAnterior","api","getDisplayedRowAtIndex","camposAComparar","todosCamposIguales","every","campo","horaRelojActual","horaRelojAnterior","horaActualHoras","horaActualMinutos","split","map","Number","horaAnteriorHoras","horaAnteriorMinutos","fechaActual","Date","fechaAnterior","diferenciaMinutos","Math","abs","rutActual","filasPrevias","forEachNode","index","push","length","ultimoMarcaje","esEntradaActual","esSalidaActual","esEntradaUltima","esSalidaUltima","errorInversionEntrada","errorInversionSalida","prepareChangesEntradaSalida","refreshCells","prepareChanges","filteredRows","filter","row","prepareDeletions","array","applyChanges","updatedRowData","some","editRow","updatedRow","hora_reloj","children","className","color","display","alignItems","marginLeft","justifyContent","onClick","padding","backgroundColor","border","borderRadius","minWidth","cursor","isOpen","onRequestClose","contentLabel","content","maxWidth","margin","textAlign","paddingLeft","newDay","newHour","marginTop","marginRight","pagination","sorting","paginationPageSize","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport Modal from 'react-modal';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style-table.css';\r\n\r\nModal.setAppElement('#root'); \r\n\r\nconst DataTable = () => {\r\n    const [rowData, setRowData] = useState([]);\r\n    const [rowsToEdit, setRowsToEdit] = useState([]);\r\n    const [rowsToDelete, setRowsToDelete] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [activeAction, setActiveAction] = useState('');\r\n    \r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/data')\r\n            .then(response => response.json())\r\n            .then(data => setRowData(data))\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []);\r\n\r\n    const renderImage = (params) => {\r\n        // Aquí puedes personalizar la lógica para mostrar diferentes imágenes, dependiendo de los datos de la fila\r\n        const imageUrl = 'https://via.placeholder.com/50';  // URL de la imagen\r\n    \r\n        // Retorna una imagen con el src basado en la URL\r\n        return <img src={imageUrl} alt=\"Estado\" style={{ width: '50px', height: '50px' }} />;\r\n    };\r\n    \r\n\r\n    const columnDefs = [\r\n        { headerName: 'Día', field: 'Día', flex: 1 },\r\n        { headerName: 'RUT', field: 'RUT', editable:true, flex: 1},\r\n        { headerName: 'Entrada/Salida', field: 'entrada/salida', editable: true ,flex: 1},\r\n        { headerName: 'Fecha reloj', field: 'fecha_reloj',flex: 1 },\r\n        { headerName: 'Hora reloj', field: 'hora_reloj', editable: true,flex: 1 },\r\n        { headerName: 'Entrada Horario', field: 'Hora Entrada', flex: 1 },\r\n        { headerName: 'Salida Horario', field: 'Hora Salida', editable: true, flex: 1},\r\n        { headerName: 'Error encontrado', field: 'Error encontrado', flex: 1},\r\n        {\r\n            headerName: \"Estado\", \r\n            field: \"estado\", // El campo en tus datos\r\n            //cellRendererFramework: renderImage,\r\n            flex: 1\r\n          }\r\n    ];\r\n\r\n    const gridOptions = {\r\n        columnDefs: columnDefs,\r\n        defaultColDef: {\r\n            resizable: false, // Deshabilitar el redimensionamiento globalmente\r\n            sortable: false,\r\n        },\r\n    };\r\n\r\n    const rowClassRules = {\r\n            \r\n        'row-red': params => {\r\n        if (\r\n            params.data['entrada/salida'] === 3 &&\r\n            params.data['hora_reloj'] === \"00:00\" &&\r\n            params.data['Hora Salida'] !== \"00:00\"\r\n        ) {\r\n            params.data['Error encontrado'] = '1';\r\n            setRowData(prevRowData => [...prevRowData]);\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n        'row-yellow': params => {\r\n    const filaActual = params.data;\r\n\r\n    // Si esta es la primera fila, no hay filas anteriores\r\n    if (params.node.rowIndex === 0) return false;\r\n\r\n    // Acceder a todas las filas anteriores\r\n    for (let i = 0; i < params.node.rowIndex; i++) {\r\n        const filaAnterior = params.api.getDisplayedRowAtIndex(i);\r\n\r\n        if (!filaAnterior || !filaAnterior.data) continue;\r\n\r\n        // Comparar cada campo especificado entre la fila actual y la fila anterior\r\n        const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\r\n        const todosCamposIguales = camposAComparar.every(campo => filaActual[campo] === filaAnterior.data[campo]);\r\n\r\n        if (!todosCamposIguales) continue;\r\n\r\n        // Si todos los campos coinciden, comparar la diferencia de horas\r\n        const horaRelojActual = filaActual['hora_reloj'];\r\n        const horaRelojAnterior = filaAnterior.data['hora_reloj'];\r\n\r\n        const [horaActualHoras, horaActualMinutos] = horaRelojActual.split(':').map(Number);\r\n        const [horaAnteriorHoras, horaAnteriorMinutos] = horaRelojAnterior.split(':').map(Number);\r\n\r\n        const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\r\n        const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\r\n\r\n        const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\r\n\r\n        // Retornar true si la diferencia es menor o igual a 5 minutos y todos los campos coinciden\r\n        if (diferenciaMinutos <= 5) {\r\n            filaActual['Error encontrado'] = '2';\r\n            setRowData(prevRowData => [...prevRowData]);\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n},\r\n    'row-orange':params=>{\r\n        const filaActual = params.data;\r\n        const rutActual = filaActual['RUT'];\r\n\r\n        // Obtener todas las filas anteriores con el mismo RUT\r\n        const filasPrevias = [];\r\n        params.api.forEachNode((node, index) => {\r\n            if (index < params.node.rowIndex && node.data['RUT'] === rutActual) {\r\n                filasPrevias.push(node.data);\r\n            }\r\n        });\r\n\r\n        // Si no hay filas previas con el mismo RUT, no hay error posible\r\n        if (filasPrevias.length === 0) return false;\r\n\r\n        // Obtener el último marcaje registrado para el mismo RUT\r\n        const ultimoMarcaje = filasPrevias[filasPrevias.length - 1];\r\n\r\n        // Validar el tipo de entrada/salida\r\n        const esEntradaActual = filaActual['entrada/salida'] === 1; // Actual es \"entrada\"\r\n        const esSalidaActual = filaActual['entrada/salida'] === 3; // Actual es \"salida\"\r\n\r\n        const esEntradaUltima = ultimoMarcaje['entrada/salida'] === 1; // Última es \"entrada\"\r\n        const esSalidaUltima = ultimoMarcaje['entrada/salida'] === 3; // Última es \"salida\"\r\n\r\n        // Detectar error de marcaje\r\n        const errorInversionEntrada = esEntradaActual && esEntradaUltima; // Dos entradas seguidas\r\n        const errorInversionSalida = esSalidaActual && esSalidaUltima;   // Dos salidas seguidas\r\n\r\n        // Retornar true si hay un error de inversión de entrada/salida\r\n        if (errorInversionEntrada || errorInversionSalida) {\r\n            return true;\r\n        }\r\n    }\r\n    };\r\n    const prepareChangesEntradaSalida = (params) => {\r\n        const filaActual = params.data;\r\n        const rutActual = filaActual['RUT'];\r\n    \r\n        // Obtener todas las filas anteriores con el mismo RUT\r\n        const filasPrevias = [];\r\n        params.api.forEachNode((node, index) => {\r\n            if (index < params.node.rowIndex && node.data['RUT'] === rutActual) {\r\n                filasPrevias.push(node.data);\r\n            }\r\n        });\r\n    \r\n        // Si no hay filas previas con el mismo RUT, no hay error posible\r\n        if (filasPrevias.length === 0) return false;\r\n    \r\n        // Obtener el último marcaje registrado para el mismo RUT\r\n        const ultimoMarcaje = filasPrevias[filasPrevias.length - 1];\r\n    \r\n        // Validar el tipo de entrada/salida\r\n        const esEntradaActual = filaActual['entrada/salida'] === 1; // Actual es \"entrada\"\r\n        const esSalidaActual = filaActual['entrada/salida'] === 3; // Actual es \"salida\"\r\n        const esEntradaUltima = ultimoMarcaje['entrada/salida'] === 1; // Última es \"entrada\"\r\n        const esSalidaUltima = ultimoMarcaje['entrada/salida'] === 3; // Última es \"salida\"\r\n    \r\n        // Detectar error de marcaje\r\n        const errorInversionEntrada = esEntradaActual && esEntradaUltima; // Dos entradas seguidas\r\n        const errorInversionSalida = esSalidaActual && esSalidaUltima;   // Dos salidas seguidas\r\n    \r\n        // Si hay un error de inversión de entrada/salida\r\n        if (errorInversionEntrada || errorInversionSalida) {\r\n            // Cambiar el valor de \"entrada/salida\" al contrario\r\n            filaActual['entrada/salida'] = filaActual['entrada/salida'] === 1 ? 3 : 1;\r\n    \r\n            // Marcar activeAction como verdadero\r\n            setActiveAction('editfinal');\r\n    \r\n            // Actualizar los datos de la fila (esto depende de cómo estés gestionando los datos, por ejemplo, en una tabla o en un estado)\r\n            // Aquí se asume que tienes un estado para actualizar la tabla, por ejemplo:\r\n            params.api.refreshCells(); // Para actualizar la celda de la fila cambiada\r\n            return true;\r\n        }\r\n    \r\n        return false;\r\n    };\r\n\r\n    // Preparar las filas a modificar y abrir el modal\r\n    const prepareChanges = () => {\r\n        const filteredRows = rowData.filter(row =>\r\n            row['entrada/salida'] === 3 &&\r\n            row['hora_reloj'] === \"00:00\" &&\r\n            row['Hora Salida'] !== \"00:00\"\r\n        );\r\n        setRowsToEdit(filteredRows);\r\n        setActiveAction('edit');\r\n        setIsModalOpen(true);\r\n    };\r\n    // Preparar las filas a eliminar y abrir el modal de confirmación (si deseas)\r\n    const prepareDeletions = () => {\r\n        // Filtrar las filas que cumplen con la lógica de row-yellow\r\n        const filteredRows = rowData.filter((row, index, array) => {\r\n            if (index === 0) return false;\r\n\r\n            const filaAnterior = array[index - 1];\r\n            const camposAComparar = ['Día', 'RUT', 'fecha_reloj'];\r\n            const todosCamposIguales = camposAComparar.every(campo => row[campo] === filaAnterior[campo]);\r\n\r\n            if (!todosCamposIguales) return false;\r\n\r\n            // Comparar la diferencia de horas\r\n            const horaRelojActual = row['hora_reloj'];\r\n            const horaRelojAnterior = filaAnterior['hora_reloj'];\r\n\r\n            const [horaActualHoras, horaActualMinutos] = horaRelojActual.split(':').map(Number);\r\n            const [horaAnteriorHoras, horaAnteriorMinutos] = horaRelojAnterior.split(':').map(Number);\r\n\r\n            const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\r\n            const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\r\n\r\n            const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\r\n\r\n            // Devolver true si la diferencia es menor o igual a 5 minutos y los campos coinciden\r\n            return diferenciaMinutos <= 5;\r\n        });\r\n\r\n        setRowsToEdit(filteredRows);\r\n        setActiveAction('delete');\r\n        setIsModalOpen(true); // Abrir el modal de confirmación (opcional)\r\n    };\r\n\r\n    const applyChanges = () => {\r\n        let updatedRowData;\r\n        \r\n        if (activeAction === 'edit') {\r\n            updatedRowData = rowData.map(row => {\r\n                // Si la fila está en rowsToEdit, actualiza la columna 'Error Encontrado'\r\n                if (rowsToEdit.some(editRow => editRow === row)) {\r\n                    // Actualizar la columna 'Error Encontrado' con el nuevo valor\r\n                    const updatedRow = { ...row, \r\n                        hora_reloj: row['Hora Salida'], \r\n                        'Error encontrado': ''  // Cambiar el texto de la columna 'Error Encontrado'\r\n                    };\r\n                    return updatedRow;\r\n                }\r\n                return row;\r\n            });\r\n        } else if (activeAction === 'delete') {\r\n            updatedRowData = rowData.filter(row => !rowsToEdit.some(editRow => editRow === row));\r\n        }\r\n    \r\n        setRowData(updatedRowData);\r\n        setIsModalOpen(false);\r\n    };\r\n    \r\n    \r\n    \r\n        return (\r\n            <>\r\n            <i className=\"fas fa-exclamation-triangle\" style={{ color: 'red' }}></i>\r\n                <div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n                    <div style={{ flex: 1 }}>\r\n                        <h3>1-. Omisión de Marcaje</h3>\r\n                        <p>\r\n                            Permite que en aquellas filas donde la entrada no es marcada se le asigne el horario programado.\r\n                        </p>\r\n                    </div>\r\n                    <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                        <button\r\n                            onClick={prepareChanges}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#007bff',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                minWidth: '200px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Modificar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n                    <div style={{ flex: 1 }}>\r\n                        <h3>2-. Marcaje múltiple</h3>\r\n                        <p>\r\n                            Encuentra filas en donde se ha marcado mas de 1 vez, en un rango de tiempo de 5 minutos\r\n                        </p>\r\n                    </div>\r\n                    <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                        <button\r\n                            onClick={prepareDeletions}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#007bff',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                minWidth: '200px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Modificar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', width: '65%' }}>\r\n                    <div style={{ flex: 1 }}>\r\n                        <h3>3-. Ajustar Entrada/Salida Incorrecta</h3>\r\n                        <p>\r\n                            Revisa que no existan dos entradas o dos salidas consecutivas para la misma persona.\r\n                        </p>\r\n                    </div>\r\n                    <div style={{ marginLeft: '5px', display: 'flex', justifyContent: 'center', flex: 0 }}>\r\n                        <button\r\n                            onClick={prepareChanges}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#007bff',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                minWidth: '200px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Modificar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                    \r\n                <Modal\r\n                    isOpen={isModalOpen}\r\n                    onRequestClose={() => setIsModalOpen(false)}\r\n                    contentLabel=\"Confirmación de Cambios\"\r\n                    style={{\r\n                        content: {\r\n                            maxWidth: '500px',\r\n                            margin: 'auto',\r\n                            padding: '20px',\r\n                            borderRadius: '8px',\r\n                            border: '1px solid #ccc',\r\n                        }\r\n                    }}\r\n                >\r\n                    <h2 style={{ textAlign: 'center' }}>\r\n                        {activeAction === 'edit' ? 'Confirmar Edición' : 'Confirmar Eliminación'}\r\n                    </h2>\r\n                    <p>\r\n                        {activeAction === 'edit'\r\n                            ? 'Las siguientes filas serán editadas:'\r\n                            : 'Las siguientes filas serán eliminadas:'}\r\n                    </p>\r\n                    <ul style={{ paddingLeft: '20px' }}>\r\n                        {rowsToEdit.map((row, index) => (\r\n                            <li key={index}>\r\n                                Día: {row['Día']}, RUT: {row['RUT']}, Hora Reloj: {row['hora_reloj']}\r\n                                {activeAction === 'edit' && (\r\n                                <>\r\n                                <br />\r\n                                <strong>Nuevos valores:</strong> \r\n                                <span style={{ color: '#28a745' }}>\r\n                                    Día: {row.newDay || row['Día']}, Nueva Hora Reloj: {row.newHour || row['Hora Salida']}\r\n                                </span>\r\n                                </>\r\n                        )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n                        <button\r\n                            onClick={applyChanges}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                marginRight: '10px',\r\n                                backgroundColor: '#28a745',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Confirmar\r\n                        </button>\r\n                        <button\r\n                            onClick={() => setIsModalOpen(false)}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                backgroundColor: '#dc3545',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '5px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n\r\n    \r\n                <div className=\"ag-theme-alpine\" style={{ height: '400px', width: '100%' }}>\r\n                    <AgGridReact\r\n                        rowData={rowData}\r\n                        gridOptions={gridOptions}\r\n                        columnDefs={columnDefs}\r\n                        rowClassRules={rowClassRules}\r\n                        pagination={true}\r\n                        sorting={true}\r\n                        paginationPageSize={10} // Número de filas por página\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n    \r\n    export default DataTable;\r\n    \r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}