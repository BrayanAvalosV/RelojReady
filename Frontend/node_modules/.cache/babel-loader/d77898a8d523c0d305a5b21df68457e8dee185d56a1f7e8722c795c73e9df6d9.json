{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useReactTable } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Datos de prueba\n  useEffect(() => {\n    // Simula la obtención de datos\n    const fetchData = async () => {\n      const sampleData = [{\n        Día: 'Lunes',\n        'Hora Entrada': '08:00',\n        'Hora Salida': '17:00'\n      }, {\n        Día: 'Martes',\n        'Hora Entrada': '08:00',\n        'Hora Salida': '17:00'\n      }];\n      setData(sampleData);\n    };\n    fetchData();\n  }, []);\n  const columns = React.useMemo(() => [{\n    header: 'Día',\n    accessorKey: 'Día'\n  }, {\n    header: 'Hora Entrada',\n    accessorKey: 'Hora Entrada'\n  }, {\n    header: 'Hora Salida',\n    accessorKey: 'Hora Salida'\n  }], []);\n  const table = useReactTable({\n    data,\n    columns\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      border: 'solid 1px black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            border: 'solid 1px gray'\n          },\n          children: header.isPlaceholder ? null : header.render('Header')\n        }, header.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            border: 'solid 1px gray'\n          },\n          children: cell.render('Cell')\n        }, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Table, \"0Jcx5zw0/zEU1yzEkZqzQXEXMM4=\", false, function () {\n  return [useReactTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","useReactTable","jsxDEV","_jsxDEV","Table","_s","data","setData","fetchData","sampleData","Día","columns","useMemo","header","accessorKey","table","style","border","children","getHeaderGroups","map","headerGroup","headers","isPlaceholder","render","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/Table.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useReactTable } from '@tanstack/react-table';\r\n\r\nconst Table = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    // Datos de prueba\r\n    useEffect(() => {\r\n        // Simula la obtención de datos\r\n        const fetchData = async () => {\r\n            const sampleData = [\r\n                { Día: 'Lunes', 'Hora Entrada': '08:00', 'Hora Salida': '17:00' },\r\n                { Día: 'Martes', 'Hora Entrada': '08:00', 'Hora Salida': '17:00' },\r\n            ];\r\n            setData(sampleData);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            { header: 'Día', accessorKey: 'Día' },\r\n            { header: 'Hora Entrada', accessorKey: 'Hora Entrada' },\r\n            { header: 'Hora Salida', accessorKey: 'Hora Salida' },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n    });\r\n\r\n    return (\r\n        <table style={{ border: 'solid 1px black' }}>\r\n            <thead>\r\n                {table.getHeaderGroups().map(headerGroup => (\r\n                    <tr key={headerGroup.id}>\r\n                        {headerGroup.headers.map(header => (\r\n                            <th key={header.id} style={{ border: 'solid 1px gray' }}>\r\n                                {header.isPlaceholder ? null : header.render('Header')}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody>\r\n                {table.getRowModel().rows.map(row => (\r\n                    <tr key={row.id}>\r\n                        {row.getVisibleCells().map(cell => (\r\n                            <td key={cell.id} style={{ border: 'solid 1px gray' }}>\r\n                                {cell.render('Cell')}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}