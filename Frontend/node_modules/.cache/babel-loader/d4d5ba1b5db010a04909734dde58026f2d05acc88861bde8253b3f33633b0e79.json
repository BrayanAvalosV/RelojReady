{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport Modal from 'react-modal';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\nimport '../style-table.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst DataTable = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [activeAction, setActiveAction] = useState('');\n  const [rowsToEdit, setRowsToEdit] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data').then(response => response.json()).then(data => {\n      const processedData = processErrors(data); // Procesar errores al cargar\n      setRowData(processedData);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Procesar errores en los datos\n  const processErrors = data => {\n    return data.map((row, index, array) => {\n      let error = '';\n\n      // Error 1: Omisión de marcaje\n      if (row['entrada/salida'] === 3 && row['hora_reloj'] === '00:00' && row['Hora Salida'] !== '00:00') {\n        error = '1';\n      }\n\n      // Error 2: Marcaje múltiple en 5 minutos\n      if (index > 0) {\n        const prevRow = array[index - 1];\n        const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\n        const todosCamposIguales = camposAComparar.every(campo => row[campo] === prevRow[campo]);\n        if (todosCamposIguales) {\n          // Extraer horas y minutos de las marcas actuales y previas\n          const [horaActualHoras, horaActualMinutos] = row['hora_reloj'].split(':').map(Number);\n          const [horaAnteriorHoras, horaAnteriorMinutos] = prevRow['hora_reloj'].split(':').map(Number);\n\n          // Crear objetos de fecha solo para comparar tiempos\n          const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\n          const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\n\n          // Calcular la diferencia en minutos\n          const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\n\n          // Depuración: Imprimir la diferencia calculada\n          console.log(`Diferencia entre ${prevRow['hora_reloj']} y ${row['hora_reloj']}: ${diferenciaMinutos} minutos`);\n\n          // Solo marcar error si la diferencia es menor o igual a 5 minutos\n          if (diferenciaMinutos > 0 && diferenciaMinutos <= 5) {\n            error = '2';\n          }\n        }\n      }\n\n      // Error 3: Inversión de entrada/salida\n      if (index > 0) {\n        const prevRow = array.slice(0, index).reverse().find(r => r['RUT'] === row['RUT']);\n        if (prevRow) {\n          const esEntradaActual = row['entrada/salida'] === 1;\n          const esSalidaActual = row['entrada/salida'] === 3;\n          const esEntradaPrev = prevRow['entrada/salida'] === 1;\n          const esSalidaPrev = prevRow['entrada/salida'] === 3;\n          if (esEntradaActual && esEntradaPrev || esSalidaActual && esSalidaPrev) {\n            error = '3';\n          }\n        }\n      }\n      return {\n        ...row,\n        'Error encontrado': error\n      };\n    });\n  };\n  const columnDefs = [{\n    headerName: 'Día',\n    field: 'Día',\n    flex: 1\n  }, {\n    headerName: 'RUT',\n    field: 'RUT',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada/Salida',\n    field: 'entrada/salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Fecha reloj',\n    field: 'fecha_reloj',\n    flex: 1\n  }, {\n    headerName: 'Hora reloj',\n    field: 'hora_reloj',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada Horario',\n    field: 'Hora Entrada',\n    flex: 1\n  }, {\n    headerName: 'Salida Horario',\n    field: 'Hora Salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Error encontrado',\n    field: 'Error encontrado',\n    flex: 1\n  }];\n  const onCellValueChanged = params => {\n    const updatedRowData = processErrors([...rowData]);\n    setRowData(updatedRowData);\n  };\n  const applyChanges = () => {\n    const updatedRowData = rowData.map(row => {\n      if (rowsToEdit.includes(row)) {\n        return {\n          ...row,\n          hora_reloj: row['Hora Salida'],\n          'Error encontrado': ''\n        };\n      }\n      return row;\n    });\n    setRowData(updatedRowData);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-alpine\",\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        rowData: rowData,\n        columnDefs: columnDefs,\n        rowClassRules: {\n          'row-red': params => params.data['Error encontrado'] === '1',\n          'row-yellow': params => params.data['Error encontrado'] === '2',\n          'row-orange': params => params.data['Error encontrado'] === '3'\n        },\n        defaultColDef: {\n          editable: true,\n          flex: 1\n        },\n        onCellValueChanged: onCellValueChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      style: {\n        content: {\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Confirmaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: applyChanges,\n        children: \"Aplicar cambios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(false),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(DataTable, \"3G9bqWuDt0blznZT41DzSCwLXgs=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useEffect","useState","AgGridReact","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","DataTable","_s","rowData","setRowData","isModalOpen","setIsModalOpen","activeAction","setActiveAction","rowsToEdit","setRowsToEdit","fetch","then","response","json","data","processedData","processErrors","catch","error","console","map","row","index","array","prevRow","camposAComparar","todosCamposIguales","every","campo","horaActualHoras","horaActualMinutos","split","Number","horaAnteriorHoras","horaAnteriorMinutos","fechaActual","Date","fechaAnterior","diferenciaMinutos","Math","abs","log","slice","reverse","find","r","esEntradaActual","esSalidaActual","esEntradaPrev","esSalidaPrev","columnDefs","headerName","field","flex","editable","onCellValueChanged","params","updatedRowData","applyChanges","includes","hora_reloj","children","className","style","height","width","rowClassRules","defaultColDef","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","content","top","left","transform","onClick","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport Modal from 'react-modal';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport '../style-table.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst DataTable = () => {\r\n    const [rowData, setRowData] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [activeAction, setActiveAction] = useState('');\r\n    const [rowsToEdit, setRowsToEdit] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/data')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const processedData = processErrors(data); // Procesar errores al cargar\r\n                setRowData(processedData);\r\n            })\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []);\r\n\r\n    // Procesar errores en los datos\r\n    const processErrors = (data) => {\r\n        return data.map((row, index, array) => {\r\n            let error = '';\r\n\r\n            // Error 1: Omisión de marcaje\r\n            if (\r\n                row['entrada/salida'] === 3 &&\r\n                row['hora_reloj'] === '00:00' &&\r\n                row['Hora Salida'] !== '00:00'\r\n            ) {\r\n                error = '1';\r\n            }\r\n\r\n            // Error 2: Marcaje múltiple en 5 minutos\r\n            if (index > 0) {\r\n                const prevRow = array[index - 1];\r\n                const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\r\n                const todosCamposIguales = camposAComparar.every(campo => row[campo] === prevRow[campo]);\r\n            \r\n                if (todosCamposIguales) {\r\n                    // Extraer horas y minutos de las marcas actuales y previas\r\n                    const [horaActualHoras, horaActualMinutos] = row['hora_reloj'].split(':').map(Number);\r\n                    const [horaAnteriorHoras, horaAnteriorMinutos] = prevRow['hora_reloj'].split(':').map(Number);\r\n            \r\n                    // Crear objetos de fecha solo para comparar tiempos\r\n                    const fechaActual = new Date(0, 0, 0, horaActualHoras, horaActualMinutos);\r\n                    const fechaAnterior = new Date(0, 0, 0, horaAnteriorHoras, horaAnteriorMinutos);\r\n            \r\n                    // Calcular la diferencia en minutos\r\n                    const diferenciaMinutos = Math.abs((fechaActual - fechaAnterior) / 60000);\r\n            \r\n                    // Depuración: Imprimir la diferencia calculada\r\n                    console.log(`Diferencia entre ${prevRow['hora_reloj']} y ${row['hora_reloj']}: ${diferenciaMinutos} minutos`);\r\n            \r\n                    // Solo marcar error si la diferencia es menor o igual a 5 minutos\r\n                    if (diferenciaMinutos > 0 && diferenciaMinutos <= 5) {\r\n                        error = '2';\r\n                    }\r\n                }\r\n            }\r\n            \r\n            \r\n\r\n            // Error 3: Inversión de entrada/salida\r\n            if (index > 0) {\r\n                const prevRow = array.slice(0, index).reverse().find(r => r['RUT'] === row['RUT']);\r\n                if (prevRow) {\r\n                    const esEntradaActual = row['entrada/salida'] === 1;\r\n                    const esSalidaActual = row['entrada/salida'] === 3;\r\n                    const esEntradaPrev = prevRow['entrada/salida'] === 1;\r\n                    const esSalidaPrev = prevRow['entrada/salida'] === 3;\r\n\r\n                    if ((esEntradaActual && esEntradaPrev) || (esSalidaActual && esSalidaPrev)) {\r\n                        error = '3';\r\n                    }\r\n                }\r\n            }\r\n\r\n            return { ...row, 'Error encontrado': error };\r\n        });\r\n    };\r\n\r\n    const columnDefs = [\r\n        { headerName: 'Día', field: 'Día', flex: 1 },\r\n        { headerName: 'RUT', field: 'RUT', editable: true, flex: 1 },\r\n        { headerName: 'Entrada/Salida', field: 'entrada/salida', editable: true, flex: 1 },\r\n        { headerName: 'Fecha reloj', field: 'fecha_reloj', flex: 1 },\r\n        { headerName: 'Hora reloj', field: 'hora_reloj', editable: true, flex: 1 },\r\n        { headerName: 'Entrada Horario', field: 'Hora Entrada', flex: 1 },\r\n        { headerName: 'Salida Horario', field: 'Hora Salida', editable: true, flex: 1 },\r\n        { headerName: 'Error encontrado', field: 'Error encontrado', flex: 1 },\r\n    ];\r\n\r\n    const onCellValueChanged = (params) => {\r\n        const updatedRowData = processErrors([...rowData]);\r\n        setRowData(updatedRowData);\r\n    };\r\n\r\n    const applyChanges = () => {\r\n        const updatedRowData = rowData.map(row => {\r\n            if (rowsToEdit.includes(row)) {\r\n                return { ...row, hora_reloj: row['Hora Salida'], 'Error encontrado': '' };\r\n            }\r\n            return row;\r\n        });\r\n        setRowData(updatedRowData);\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ag-theme-alpine\" style={{ height: '600px', width: '100%' }}>\r\n                <AgGridReact\r\n                    rowData={rowData}\r\n                    columnDefs={columnDefs}\r\n                    rowClassRules={{\r\n                        'row-red': params => params.data['Error encontrado'] === '1',\r\n                        'row-yellow': params => params.data['Error encontrado'] === '2',\r\n                        'row-orange': params => params.data['Error encontrado'] === '3',\r\n                    }}\r\n                    defaultColDef={{ editable: true, flex: 1 }}\r\n                    onCellValueChanged={onCellValueChanged}\r\n                />\r\n            </div>\r\n\r\n            <Modal\r\n                isOpen={isModalOpen}\r\n                onRequestClose={() => setIsModalOpen(false)}\r\n                style={{ content: { top: '50%', left: '50%', transform: 'translate(-50%, -50%)' } }}\r\n            >\r\n                <h2>Confirmación</h2>\r\n                <button onClick={applyChanges}>Aplicar cambios</button>\r\n                <button onClick={() => setIsModalOpen(false)}>Cancelar</button>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}