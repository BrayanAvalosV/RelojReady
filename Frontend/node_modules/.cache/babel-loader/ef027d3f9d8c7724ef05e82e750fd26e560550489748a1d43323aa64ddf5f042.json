{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport Modal from 'react-modal';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport '../style-table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst DataTable = () => {\n  _s();\n  const [rowData, setRowData] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data').then(response => response.json()).then(data => setRowData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  const columnDefs = [{\n    headerName: 'Día',\n    field: 'Día',\n    flex: 1\n  }, {\n    headerName: 'RUT',\n    field: 'RUT',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada/Salida',\n    field: 'entrada/salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Fecha reloj',\n    field: 'fecha_reloj',\n    flex: 1\n  }, {\n    headerName: 'Hora reloj',\n    field: 'hora_reloj',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Entrada Horario',\n    field: 'Hora Entrada',\n    flex: 1\n  }, {\n    headerName: 'Salida Horario',\n    field: 'Hora Salida',\n    editable: true,\n    flex: 1\n  }, {\n    headerName: 'Error encontrado',\n    field: 'Error encontrado',\n    flex: 1\n  }];\n  const gridOptions = {\n    columnDefs: columnDefs,\n    defaultColDef: {\n      resizable: false,\n      sortable: false\n    }\n  };\n  const rowClassRules = {\n    'row-red': params => {\n      const esRojo = params.data['entrada/salida'] === 3 && params.data['hora_reloj'] === '00:00' && params.data['Hora Salida'] !== '00:00';\n      if (esRojo) {\n        // Actualizamos el estado al final sin usar setRowData directamente aquí.\n        setTimeout(() => {\n          setRowData(prevData => prevData.map(row => row === params.data ? {\n            ...row,\n            'Error encontrado': 'Error: entrada/salida no válida.'\n          } : row));\n        }, 0);\n      }\n      return esRojo;\n    },\n    'row-yellow': params => {\n      const filaActual = params.data;\n      const indexActual = params.node.rowIndex;\n      if (indexActual === 0) return false;\n      const filaAnterior = params.api.getDisplayedRowAtIndex(indexActual - 1);\n      if (!filaAnterior) return false;\n      const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\n      const esAmarillo = camposAComparar.every(campo => filaActual[campo] === filaAnterior.data[campo]);\n      if (esAmarillo) {\n        const [horaActualH, horaActualM] = filaActual['hora_reloj'].split(':').map(Number);\n        const [horaAnteriorH, horaAnteriorM] = filaAnterior.data['hora_reloj'].split(':').map(Number);\n        const minutosActual = horaActualH * 60 + horaActualM;\n        const minutosAnterior = horaAnteriorH * 60 + horaAnteriorM;\n        return Math.abs(minutosActual - minutosAnterior) <= 5;\n      }\n      return false;\n    },\n    'row-orange': params => {\n      const rutActual = params.data['RUT'];\n      const indexActual = params.node.rowIndex;\n      let ultimaSalida = null;\n      params.api.forEachNode((node, index) => {\n        if (index < indexActual && node.data['RUT'] === rutActual) {\n          ultimaSalida = node.data;\n        }\n      });\n      if (!ultimaSalida) return false;\n      const esEntradaActual = params.data['entrada/salida'] === 1;\n      const esSalidaActual = params.data['entrada/salida'] === 3;\n      const esEntradaUltima = ultimaSalida['entrada/salida'] === 1;\n      const esSalidaUltima = ultimaSalida['entrada/salida'] === 3;\n      return esEntradaActual && esEntradaUltima || esSalidaActual && esSalidaUltima;\n    }\n  };\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 500,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Abrir Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      gridOptions: gridOptions,\n      rowData: rowData,\n      rowClassRules: rowClassRules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Modal Abierto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Cerrar Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(DataTable, \"uibuyIMBrDARDkere/dw7/3mYkE=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useEffect","useState","AgGridReact","Modal","jsxDEV","_jsxDEV","setAppElement","DataTable","_s","rowData","setRowData","isModalOpen","setIsModalOpen","fetch","then","response","json","data","catch","error","console","columnDefs","headerName","field","flex","editable","gridOptions","defaultColDef","resizable","sortable","rowClassRules","params","esRojo","setTimeout","prevData","map","row","filaActual","indexActual","node","rowIndex","filaAnterior","api","getDisplayedRowAtIndex","camposAComparar","esAmarillo","every","campo","horaActualH","horaActualM","split","Number","horaAnteriorH","horaAnteriorM","minutosActual","minutosAnterior","Math","abs","rutActual","ultimaSalida","forEachNode","index","esEntradaActual","esSalidaActual","esEntradaUltima","esSalidaUltima","openModal","closeModal","className","style","height","width","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport Modal from 'react-modal';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '../style-table.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst DataTable = () => {\r\n    const [rowData, setRowData] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/data')\r\n            .then(response => response.json())\r\n            .then(data => setRowData(data))\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []);\r\n\r\n    const columnDefs = [\r\n        { headerName: 'Día', field: 'Día', flex: 1 },\r\n        { headerName: 'RUT', field: 'RUT', editable: true, flex: 1 },\r\n        { headerName: 'Entrada/Salida', field: 'entrada/salida', editable: true, flex: 1 },\r\n        { headerName: 'Fecha reloj', field: 'fecha_reloj', flex: 1 },\r\n        { headerName: 'Hora reloj', field: 'hora_reloj', editable: true, flex: 1 },\r\n        { headerName: 'Entrada Horario', field: 'Hora Entrada', flex: 1 },\r\n        { headerName: 'Salida Horario', field: 'Hora Salida', editable: true, flex: 1 },\r\n        { headerName: 'Error encontrado', field: 'Error encontrado', flex: 1 },\r\n    ];\r\n\r\n    const gridOptions = {\r\n        columnDefs: columnDefs,\r\n        defaultColDef: {\r\n            resizable: false,\r\n            sortable: false,\r\n        },\r\n    };\r\n\r\n    const rowClassRules = {\r\n        'row-red': params => {\r\n            const esRojo =\r\n                params.data['entrada/salida'] === 3 &&\r\n                params.data['hora_reloj'] === '00:00' &&\r\n                params.data['Hora Salida'] !== '00:00';\r\n\r\n            if (esRojo) {\r\n                // Actualizamos el estado al final sin usar setRowData directamente aquí.\r\n                setTimeout(() => {\r\n                    setRowData(prevData =>\r\n                        prevData.map(row =>\r\n                            row === params.data\r\n                                ? { ...row, 'Error encontrado': 'Error: entrada/salida no válida.' }\r\n                                : row\r\n                        )\r\n                    );\r\n                }, 0);\r\n            }\r\n            return esRojo;\r\n        },\r\n        'row-yellow': params => {\r\n            const filaActual = params.data;\r\n            const indexActual = params.node.rowIndex;\r\n\r\n            if (indexActual === 0) return false;\r\n\r\n            const filaAnterior = params.api.getDisplayedRowAtIndex(indexActual - 1);\r\n            if (!filaAnterior) return false;\r\n\r\n            const camposAComparar = ['Día', 'RUT', 'entrada/salida', 'fecha_reloj'];\r\n            const esAmarillo = camposAComparar.every(campo => filaActual[campo] === filaAnterior.data[campo]);\r\n\r\n            if (esAmarillo) {\r\n                const [horaActualH, horaActualM] = filaActual['hora_reloj'].split(':').map(Number);\r\n                const [horaAnteriorH, horaAnteriorM] = filaAnterior.data['hora_reloj'].split(':').map(Number);\r\n\r\n                const minutosActual = horaActualH * 60 + horaActualM;\r\n                const minutosAnterior = horaAnteriorH * 60 + horaAnteriorM;\r\n\r\n                return Math.abs(minutosActual - minutosAnterior) <= 5;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        'row-orange': params => {\r\n            const rutActual = params.data['RUT'];\r\n            const indexActual = params.node.rowIndex;\r\n\r\n            let ultimaSalida = null;\r\n            params.api.forEachNode((node, index) => {\r\n                if (index < indexActual && node.data['RUT'] === rutActual) {\r\n                    ultimaSalida = node.data;\r\n                }\r\n            });\r\n\r\n            if (!ultimaSalida) return false;\r\n\r\n            const esEntradaActual = params.data['entrada/salida'] === 1;\r\n            const esSalidaActual = params.data['entrada/salida'] === 3;\r\n\r\n            const esEntradaUltima = ultimaSalida['entrada/salida'] === 1;\r\n            const esSalidaUltima = ultimaSalida['entrada/salida'] === 3;\r\n\r\n            return (esEntradaActual && esEntradaUltima) || (esSalidaActual && esSalidaUltima);\r\n        },\r\n    };\r\n\r\n    const openModal = () => setIsModalOpen(true);\r\n    const closeModal = () => setIsModalOpen(false);\r\n\r\n    return (\r\n        <div className=\"ag-theme-alpine\" style={{ height: 500, width: '100%' }}>\r\n            <button onClick={openModal}>Abrir Modal</button>\r\n            <AgGridReact\r\n                gridOptions={gridOptions}\r\n                rowData={rowData}\r\n                rowClassRules={rowClassRules}\r\n            />\r\n            <Modal isOpen={isModalOpen} onRequestClose={closeModal}>\r\n                <h2>Modal Abierto</h2>\r\n                <button onClick={closeModal}>Cerrar Modal</button>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}