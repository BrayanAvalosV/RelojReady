{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valmi\\\\Documents\\\\GitHub\\\\gestion-hcoquimbo\\\\Frontend\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTable } from '@tanstack/react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Fetch data desde el backend\n  useEffect(() => {\n    fetch('http://localhost:5000/api/data').then(response => response.json()).then(data => setData(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Define las columnas\n  const columns = React.useMemo(() => [{\n    Header: 'Día',\n    accessor: 'Día'\n  }, {\n    Header: 'Hora Entrada',\n    accessor: 'Hora Entrada'\n  }, {\n    Header: 'Hora Salida',\n    accessor: 'Hora Salida'\n  }, {\n    Header: 'Código Horario',\n    accessor: 'Código Horario'\n  }, {\n    Header: 'entrada/salida',\n    accessor: 'entrada/salida'\n  }, {\n    Header: 'hora_reloj',\n    accessor: 'hora_reloj'\n  }, {\n    Header: 'fecha_reloj',\n    accessor: 'fecha_reloj'\n  }], []);\n\n  // Usa React Table\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    style: {\n      border: 'solid 1px black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          style: {\n            border: 'solid 1px gray'\n          },\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            style: {\n              border: 'solid 1px gray'\n            },\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Table, \"EAMXrdGd34rD6v5aUL/oLf9sLSM=\", false, function () {\n  return [useTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","useTable","jsxDEV","_jsxDEV","Table","_s","data","setData","fetch","then","response","json","catch","error","console","columns","useMemo","Header","accessor","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","style","border","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/valmi/Documents/GitHub/gestion-hcoquimbo/Frontend/src/components/Table.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTable } from '@tanstack/react-table';\r\n\r\nconst Table = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    // Fetch data desde el backend\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/data')\r\n            .then(response => response.json())\r\n            .then(data => setData(data))\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, []);\r\n\r\n    // Define las columnas\r\n    const columns = React.useMemo(\r\n        () => [\r\n            { Header: 'Día', accessor: 'Día' },\r\n            { Header: 'Hora Entrada', accessor: 'Hora Entrada' },\r\n            { Header: 'Hora Salida', accessor: 'Hora Salida' },\r\n            { Header: 'Código Horario', accessor: 'Código Horario' },\r\n            { Header: 'entrada/salida', accessor: 'entrada/salida' },\r\n            { Header: 'hora_reloj', accessor: 'hora_reloj' },\r\n            { Header: 'fecha_reloj', accessor: 'fecha_reloj' },\r\n        ],\r\n        []\r\n    );\r\n\r\n    // Usa React Table\r\n    const tableInstance = useTable({ columns, data });\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n\r\n    return (\r\n        <table {...getTableProps()} style={{ border: 'solid 1px black' }}>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()} style={{ border: 'solid 1px gray' }}>\r\n                                {column.render('Header')}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map(row => {\r\n                    prepareRow(row);\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => (\r\n                                <td {...cell.getCellProps()} style={{ border: 'solid 1px gray' }}>\r\n                                    {cell.render('Cell')}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}