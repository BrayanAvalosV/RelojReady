version: '3'

services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./Backend:/app
    command: python -m app.app
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://user:password@user-db:5432/gestiondb_usuarios
      - FLASK_DEBUG=1
      - MONGO_URI=mongodb://mongodb:27017/horariosDB
    depends_on:
      - user-db
      - mongodb
    networks:
      - app-network

  user-db:
    image: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=gestiondb_usuarios
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_USER_SERVICE_URL=http://backend:5000
    command: ["npm", "run", "start"]
    stdin_open: true
    tty: true
    networks:
      - app-network

  mongodb:
    image: mongo
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

volumes:
  user_postgres_data:
  mongodata:

networks:
  app-network:
    driver: bridge
